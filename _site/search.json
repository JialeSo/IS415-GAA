[
  {
    "objectID": "template.html",
    "href": "template.html",
    "title": "In Class Exercise 1: Geospatial Data Science",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#importing-2014-shpz-file",
    "href": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#importing-2014-shpz-file",
    "title": "In Class Exercise 2: Working with Master Plan Planning Sub-zone Data",
    "section": "3.1 Importing 2014 SHPZ File",
    "text": "3.1 Importing 2014 SHPZ File\n\nTask at HandSHPZ File ImportingKML File Importing\n\n\n\nGo to data.gov.sg and download the 2014 Master Subzone SHP and KML File\nImport and read the SHP and KML File in R.\n\n\n\nWe can use the st_read function to import the data.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nSimilarly we can use the st_read function to import the data.\n\nmspz_kml &lt;- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n\nError: Cannot open \"C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MasterPlan2014SubzoneBoundaryWebKML.kml\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.\n\n\nHowever, the data on data.gov.sg is corrupted. Hence we will do a workaround, where we can create a new kml file base on the shp file and read it.\nStep 1: using the st_write to create a kml file from the shapefile\nStep 2: using the st_read function to read the generated kml file.\n\nst_write(mpsz, \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\", driver = \"KML\")\n\nLayer MP14_SUBZONE_WEB_PL in dataset data/geospatial/MP14_SUBZONE_WEB_PL.kml already exists:\nuse either append=TRUE to append to layer or append=FALSE to overwrite layer\n\n\nError in eval(expr, envir, enclos): Dataset already exists.\n\nmpsz_kml &lt;- st_read(\"data/geospatial/MP14_SUBZONE_WEB_PL.kml\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MP14_SUBZONE_WEB_PL.kml' \n  using driver `KML'\nSimple feature collection with 323 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#importing-2019-shpz-file",
    "href": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#importing-2019-shpz-file",
    "title": "In Class Exercise 2: Working with Master Plan Planning Sub-zone Data",
    "section": "3.2 Importing 2019 SHPZ File",
    "text": "3.2 Importing 2019 SHPZ File\n\nTask At HandImporting the SHP FileImporting KML File\n\n\n\nGo to data.gov.sg and download the 2019 KML File\nImport and read the KML File in R.\n\n\n\n\nmpsz19_shp &lt;- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\n\n\nmpsz19_kml &lt;- st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#comparison-the-difference-between-shp-and-kml-file-and-formatting-the-crs.",
    "href": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#comparison-the-difference-between-shp-and-kml-file-and-formatting-the-crs.",
    "title": "In Class Exercise 2: Working with Master Plan Planning Sub-zone Data",
    "section": "3.3 Comparison the difference between SHP and KML File and formatting the CRS.",
    "text": "3.3 Comparison the difference between SHP and KML File and formatting the CRS.\n\n3.3.1 Understanding SHP and KML Files\nUse glimpse() and head() to compare the attributes available in each file. For instance, SHP files might have more detailed attribute tables with multiple fields, while KML files are more streamlined with fewer attributes.\n\nSHP FileKML FILE\n\n\n\nglimpse(mpsz19_shp)\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((103.8802 1...., MULTIPOLYGON (…\n\n\n\nhead(mpsz19_shp)\n\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6537 ymin: 1.216215 xmax: 103.8988 ymax: 1.297462\nGeodetic CRS:  WGS 84\n                SUBZONE_N SUBZONE_C      PLN_AREA_N PLN_AREA_C       REGION_N\n1             MARINA EAST    MESZ01     MARINA EAST         ME CENTRAL REGION\n2        INSTITUTION HILL    RVSZ05    RIVER VALLEY         RV CENTRAL REGION\n3          ROBERTSON QUAY    SRSZ01 SINGAPORE RIVER         SR CENTRAL REGION\n4 JURONG ISLAND AND BUKOM    WISZ01 WESTERN ISLANDS         WI    WEST REGION\n5            FORT CANNING    MUSZ02          MUSEUM         MU CENTRAL REGION\n6        MARINA EAST (MP)    MPSZ05   MARINE PARADE         MP CENTRAL REGION\n  REGION_C                       geometry\n1       CR MULTIPOLYGON (((103.8802 1....\n2       CR MULTIPOLYGON (((103.8376 1....\n3       CR MULTIPOLYGON (((103.8341 1....\n4       WR MULTIPOLYGON (((103.7125 1....\n5       CR MULTIPOLYGON (((103.8472 1....\n6       CR MULTIPOLYGON (((103.8987 1....\n\n\n\n\n\nglimpse(mpsz19_kml)\n\nRows: 332\nColumns: 3\n$ Name        &lt;chr&gt; \"kml_1\", \"kml_2\", \"kml_3\", \"kml_4\", \"kml_5\", \"kml_6\", \"kml…\n$ Description &lt;chr&gt; \"&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Att…\n$ geometry    &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON Z (((103.8145 ..., MULTIPOLYGON …\n\n\n\nhead(mpsz19_kml)\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.8013 ymin: 1.274155 xmax: 103.8532 ymax: 1.286517\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n4 kml_4\n5 kml_5\n6 kml_6\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Description\n1     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;DEPOT ROAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;C22DED671DE2A940&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;2&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ02&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;085EF219A5A1AEAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;CHINATOWN&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;OTSZ03&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;OUTRAM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;OT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;EF2B9A91AF49E025&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n4       &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;PHILLIP&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;DTSZ04&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;DOWNTOWN CORE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;DT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;615D4EDDEF809F8E&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n5 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;RAFFLES PLACE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;DTSZ05&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;DOWNTOWN CORE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;DT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;72107B11807074F4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n6         &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;CHINA SQUARE&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;OTSZ04&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;Y&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;OUTRAM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;OT&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;B609DF5587626C8F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                        geometry\n1 MULTIPOLYGON Z (((103.8145 ...\n2 MULTIPOLYGON Z (((103.8221 ...\n3 MULTIPOLYGON Z (((103.8438 ...\n4 MULTIPOLYGON Z (((103.8496 ...\n5 MULTIPOLYGON Z (((103.8525 ...\n6 MULTIPOLYGON Z (((103.8486 ...\n\n\n\n\n\n\n\nSHP vs. KML: Key Differences\n\n\nSummary Table:\n\n\n\n\n\n\n\n\nProperty\nSHP (Shapefile)\nKML (Keyhole Markup Language)\n\n\n\n\nFile Structure\nMultiple files for geometries and attributes\nSingle file for visualization\n\n\nAttributes\nDetailed, diverse data types\nLimited, mostly descriptive\n\n\nGeometry Types\nComplex, suited for GIS analysis\nBasic, suited for display\n\n\nCRS Information\nExplicit and configurable (e.g., EPSG:3414)\nTypically defaults to WGS84\n\n\nUsage Context\nGIS analysis, mapping\nWeb-based visualization\n\n\nPerformance\nSlower with large datasets\nLightweight and quick for display\n\n\n\n\n\n3.3.2 CRS (Coordinate Reference System)\n\nSHP File CRS: Shapefiles often come with a defined CRS. In this case, we ensure that it is aligned with Singapore’s local system (EPSG:3414).\nKML File CRS: KML files typically default to WGS84 (EPSG:4326), which is used in web applications and is latitude/longitude-based.\n\n\n\n\n\n\n\nHow to know which CRS to use ? We can simply go to epsg.io to check https://epsg.io/?q=singapore\n\n\n\n\nst_crs(mpsz19_shp)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\nmpsz19_shp_crs3414 &lt;- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\nst_crs(mpsz19_shp_crs3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#import-and-simple-data-transformation",
    "href": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#import-and-simple-data-transformation",
    "title": "In Class Exercise 2: Working with Master Plan Planning Sub-zone Data",
    "section": "4.1 Import and Simple Data Transformation",
    "text": "4.1 Import and Simple Data Transformation\n\nThe TaskCode\n\n\nGo toSingStat Website and download 2023’s dataset for our popuplation data. We then group them by age and subzone\n\n\n\npopdata &lt;- read_csv(\"data/respopagesextod2023.csv\")\npopdata2023 &lt;- popdata %&gt;%\n  group_by(PA, SZ, AG) %&gt;%  # Ensure data is grouped by 'AG' if needed\n  summarise(POP = sum(Pop, na.rm = TRUE)) %&gt;%  # Summarise population\n  pivot_wider(names_from = AG, values_from = POP) %&gt;%  # Pivot to wider format\n  ungroup()  # Ungroup the data\n\n# Check the column names\ncolnames(popdata2023)\n\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\""
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#simply-join-the-data-and-then-map-it-out",
    "href": "In_Class_Exercises/In_Class_Exercise_2/In_Class_Exercise2.html#simply-join-the-data-and-then-map-it-out",
    "title": "In Class Exercise 2: Working with Master Plan Planning Sub-zone Data",
    "section": "4.2 Simply join the data and then map it out",
    "text": "4.2 Simply join the data and then map it out\n\n4.2.1 Join the data\n\npopdata2023 &lt;- popdata2023 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n#Step 5: Merge the spatial data with the population data\nmpsz_pop2020 &lt;- left_join(mpsz19_shp_crs3414, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\n4.2.2 Plot the map\n\ntmap_mode(\"plot\")\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"0_to_4\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"0_to_4\") +\n  tm_layout(main.title = \"Distribution of 0_to_4 by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/data/geospatial/MPSZ-2019.html",
    "href": "In_Class_Exercises/In_Class_Exercise_2/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA: JialeSo",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_1/downloaded Files/MPSZ-2019/MPSZ-2019.html",
    "href": "In_Class_Exercises/In_Class_Exercise_1/downloaded Files/MPSZ-2019/MPSZ-2019.html",
    "title": "IS415-GAA: JialeSo",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my IS415 Journey :) Jiale So here!",
    "section": "",
    "text": "Welcome to my website ! I’m a student currently enrolled in this course, where I’ll be diving deep into the world of geospatial analysis and geographic information systems (GIS). Through hands-on exercises, in-class activities, and take-home assignments, I’ll be exploring the practical applications of geospatial technologies.\n\n\nIS415-GAA is designed to introduce students to the key concepts and tools used in geospatial analysis. We will cover topics like spatial data collection, visualization, and analysis. By the end of the course, I aim to have a solid understanding of how to apply GIS principles to solve real-world problems.\n\n\n\nHands-On Exercises: This section includes practical exercises designed to apply what we learn in class. These exercises will help reinforce concepts and develop technical skills in GIS.\nIn-Class Exercises: These activities are done during class sessions to help us grasp key concepts quickly and collaboratively.\nTake-Home Exercises: Assignments to be completed independently, giving us the opportunity to dive deeper into specific topics at our own pace.\n\n\n\n\n\nI chose IS415-GAA because of its relevance in today’s data-driven world. Geospatial analysis is becoming increasingly important across many industries, and I’m excited to build the skills that can help me make data-driven decisions and contribute to meaningful projects.\n\n\n\nThroughout the course, I’ll be documenting my progress, reflecting on key learning points, and sharing interesting insights I discover along the way. Stay tuned as I embark on this exciting journey into the realm of geospatial analysis!\n\nTo navigate the site, use the links in the navigation bar at the top."
  },
  {
    "objectID": "index.html#about-this-module",
    "href": "index.html#about-this-module",
    "title": "Welcome to my IS415 Journey :) Jiale So here!",
    "section": "",
    "text": "IS415-GAA is designed to introduce students to the key concepts and tools used in geospatial analysis. We will cover topics like spatial data collection, visualization, and analysis. By the end of the course, I aim to have a solid understanding of how to apply GIS principles to solve real-world problems.\n\n\n\nHands-On Exercises: This section includes practical exercises designed to apply what we learn in class. These exercises will help reinforce concepts and develop technical skills in GIS.\nIn-Class Exercises: These activities are done during class sessions to help us grasp key concepts quickly and collaboratively.\nTake-Home Exercises: Assignments to be completed independently, giving us the opportunity to dive deeper into specific topics at our own pace."
  },
  {
    "objectID": "index.html#why-i-chose-this-module",
    "href": "index.html#why-i-chose-this-module",
    "title": "Welcome to my IS415 Journey :) Jiale So here!",
    "section": "",
    "text": "I chose IS415-GAA because of its relevance in today’s data-driven world. Geospatial analysis is becoming increasingly important across many industries, and I’m excited to build the skills that can help me make data-driven decisions and contribute to meaningful projects."
  },
  {
    "objectID": "index.html#what-to-expect",
    "href": "index.html#what-to-expect",
    "title": "Welcome to my IS415 Journey :) Jiale So here!",
    "section": "",
    "text": "Throughout the course, I’ll be documenting my progress, reflecting on key learning points, and sharing interesting insights I discover along the way. Stay tuned as I embark on this exciting journey into the realm of geospatial analysis!\n\nTo navigate the site, use the links in the navigation bar at the top."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "",
    "text": "Using TMap, we will learn how to plot functional and truthful choropleth maps. Through Geo visualization, we allow our audiences to understand the dataset easier with their spatial cognition."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#importing-the-geo-spatial-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#importing-the-geo-spatial-data",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "2.1 Importing the Geo-spatial Data",
    "text": "2.1 Importing the Geo-spatial Data\nSimply use the st_read() function to import the shapefile into R.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n2.1.1 Understanding the data\nWe can easily examine the content of mpsz by calling the variable:\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\nQuestion -&gt; Notice that only the first ten records will be displayed. Do you know why?\n\nOnly 10 records are shown because displaying a subset of rows makes it easier to inspect the data without loading the entire dataset. This optimization helps improve processing time for large datasets. Often, these first 10 records provide users with a quick preview of the dataset.\nRemember, we can always explore the content of mpsz using the following functions. If we want to preview more than 10 records, we can simply use head(mpsz, 20) to view more rows.\n\nst_geometry: Prints basic information about the feature class, such as the type of geometry.\nglimpse: Displays associated attribute information in the data frame.\nhead: Reveals complete information of a feature object.\n\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\nhead(mpsz, n = 20)\n\nSimple feature collection with 20 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 8012.578 ymin: 15748.72 xmax: 33316.59 ymax: 31081.67\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\nThrough glimpse and head, we can map the following columns to their description for ease of use.\n\n\n\n\n\n\n\n\n\nVariable Name\nDescription\nCluster (Y/N)\nData Type / Example Values\n\n\n\n\nOBJECTID\nUnique identifier for each row in the dataset.\nN\n&lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, …\n\n\nSUBZONE_NO\nNumeric code representing the specific subzone within the planning area.\nY\n&lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, …\n\n\nSUBZONE_N\nThe name of the subzone (e.g., “MARINA SOUTH,” “PEARL’S HILL”).\nY\n&lt;chr&gt; “MARINA SOUTH”, “PEARL’S HILL”, “BOAT QUAY”, …\n\n\nSUBZONE_C\nShort code representing the subzone, typically an abbreviation.\nY\n&lt;chr&gt; “MSSZ01”, “OTSZ01”, “SRSZ03”, “BMSZ08”, …\n\n\nCA_IND\nIndicates if the subzone is a Central Area subzone (“Y” for Yes, “N” for No).\nY\n&lt;chr&gt; “Y”, “Y”, “Y”, “N”, “N”, “N”, “N”, …\n\n\nPLN_AREA_N\nThe name of the planning area that the subzone belongs to (e.g., “OUTRAM”).\nY\n&lt;chr&gt; “MARINA SOUTH”, “OUTRAM”, “SINGAPORE RIVER”, …\n\n\nPLN_AREA_C\nShort code representing the planning area (abbreviation).\nY\n&lt;chr&gt; “MS”, “OT”, “SR”, “BM”, “BM”, “BM”, …\n\n\nREGION_N\nThe name of the broader region (e.g., “CENTRAL REGION,” “WEST REGION”).\nY\n&lt;chr&gt; “CENTRAL REGION”, “CENTRAL REGION”, “CENTRAL REGION”, …\n\n\nREGION_C\nShort code representing the region (e.g., “CR” for Central Region).\nY\n&lt;chr&gt; “CR”, “CR”, “CR”, “CR”, “CR”, “CR”, …\n\n\nINC_CRC\nInternal checksum code for data integrity; not relevant for clustering.\nN\n&lt;chr&gt; “5ED7EB253F99252E”, “8C7149B9EB32EEFC”, “C35FEFF02B13E0E5”, …\n\n\nFMEL_UPD_D\nDate when the data was last updated (e.g., “2014-12-05”).\nN\n&lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, …\n\n\nX_ADDR\nX coordinate of the subzone’s centroid or key location.\nY\n&lt;dbl&gt; 31595.84, 28679.06, 29654.96, …\n\n\nY_ADDR\nY coordinate of the subzone’s centroid or key location.\nY\n&lt;dbl&gt; 29220.19, 29782.05, 29974.66, …\n\n\nSHAPE_Leng\nThe length of the subzone boundary (in meters).\nY\n&lt;dbl&gt; 5267.381, 3506.107, 1740.926, …\n\n\nSHAPE_Area\nThe area of the subzone (in square meters).\nY\n&lt;dbl&gt; 1630379.27, 559816.25, 160807.50, …\n\n\ngeometry\nGeographic shape data (MULTIPOLYGON) representing the subzone’s boundaries.\nY\n&lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30…, MULTIPOLYGON (((29092.28 30…, …"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#importing-attribute-data---singapore-population-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#importing-attribute-data---singapore-population-data",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "2.2 Importing Attribute Data - Singapore Population Data",
    "text": "2.2 Importing Attribute Data - Singapore Population Data\nWe can simply use the read_csv function from the readr package:\n\npopdata &lt;- read_csv(\"data/respopagesextod2011to2020.csv\")\n\n\n2.2.1 Understanding the data\nWe can perform the same exploration to understand this data set, or simply refer to the data source website here. For a quick analysis, use head() and glimpse():\n\nhead(popdata, n = 20)\n\n# A tibble: 20 × 7\n   PA         SZ                     AG     Sex     TOD                Pop  Time\n   &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;            &lt;dbl&gt; &lt;dbl&gt;\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 1- and 2-Ro…     0  2011\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 3-Room Flats    10  2011\n 3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 4-Room Flats    30  2011\n 4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 5-Room and …    50  2011\n 5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HUDC Flats (exc…     0  2011\n 6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Landed Properti…     0  2011\n 7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Condominiums an…    40  2011\n 8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Others               0  2011\n 9 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 1- and 2-Ro…     0  2011\n10 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 3-Room Flats    10  2011\n11 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 4-Room Flats    30  2011\n12 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 5-Room and …    60  2011\n13 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HUDC Flats (exc…     0  2011\n14 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females Landed Properti…     0  2011\n15 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females Condominiums an…    40  2011\n16 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females Others               0  2011\n17 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males   HDB 1- and 2-Ro…     0  2011\n18 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males   HDB 3-Room Flats    10  2011\n19 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males   HDB 4-Room Flats    30  2011\n20 Ang Mo Kio Ang Mo Kio Town Centre 5_to_9 Males   HDB 5-Room and …    60  2011\n\nglimpse(popdata, n = 2000)\n\nRows: 984,656\nColumns: 7\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ AG   &lt;chr&gt; \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to_4\", \"0_to…\n$ Sex  &lt;chr&gt; \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"Males\", \"M…\n$ TOD  &lt;chr&gt; \"HDB 1- and 2-Room Flats\", \"HDB 3-Room Flats\", \"HDB 4-Room Flats\"…\n$ Pop  &lt;dbl&gt; 0, 10, 30, 50, 0, 0, 40, 0, 0, 10, 30, 60, 0, 0, 40, 0, 0, 10, 30…\n$ Time &lt;dbl&gt; 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,…\n\n\n\n\n\nColumn Name\nColumn Full Name\nDescription\n\n\n\n\nPA\nPlanning Area\n\n\n\nSZ\nSubzone\n\n\n\nAG\nAge Group\n\n\n\nSEX\nSex\n\n\n\nTOD\nType Of Dwelling\n\n\n\nPOP\nResident count\n\n\n\nTime\nTime / Period\n\n\n\n\n\n\n2.2.2 Data Preparation\nBased on the data provided, we aim to create a thematic map focusing on 2020 values:\nClustering of age group\n\nYOUNG: Age groups 0 to 4 until age groups 20 to 24.\nECONOMY ACTIVE: Age groups 25-29 until age groups 60-64.\nAGED: Age groups 65 and above.\nTOTAL: All age groups combined.\nDEPENDENCY: The ratio of young and aged populations relative to the economy active population.\n\n\nData Transformation Process\n1. First get all the possible agegroup in a variable.\n2. filter the data set for only 2020 values.\n2. Then from there group them base on young, which is 0~4 to 20~24. etc.\n4. Summarmise the data between the population\n5. Join the Datasetss with left join\n\n\nnames(popdata) # Get the colum names of the popdata\n\n[1] \"PA\"   \"SZ\"   \"AG\"   \"Sex\"  \"TOD\"  \"Pop\"  \"Time\"\n\nage_categories &lt;- unique(popdata$AG)\n\n#Step 1\nnames(popdata)\n\n[1] \"PA\"   \"SZ\"   \"AG\"   \"Sex\"  \"TOD\"  \"Pop\"  \"Time\"\n\npopdata_2020 &lt;- popdata[popdata$Time == 2020, ]\npopdata_2020 &lt;- popdata_2020 %&gt;%\n  mutate(\n    age_group = case_when(\n      AG %in% age_categories[1:5] ~ \"Young\",  # Age groups 0_to_4 until 20_to_24\n      AG %in% age_categories[6:13] ~ \"Economy Active\",  # Age groups 25_to_29 until 60_to_64\n      AG %in% age_categories[14:length(age_categories)] ~ \"Aged\",  # Age groups 65 and above\n      TRUE ~ \"Other\"\n    )\n  )\n\n# Step 2: Group by PA, SZ, and age_group, then sum the population\ngrouped_popdata &lt;- popdata_2020 %&gt;%\n  group_by(PA, SZ, age_group) %&gt;%\n  summarise(total_population = sum(Pop, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Step 3: Pivot the data to have separate columns for Young, Economy Active, and Aged\npivoted_data &lt;- grouped_popdata %&gt;%\n  pivot_wider(\n    names_from = age_group,\n    values_from = total_population,\n    values_fill = 0  # Fill missing values with 0\n  )\n\n# Step 4: Calculate TOTAL and DEPENDENCY columns\nfinal_data_2020 &lt;- pivoted_data %&gt;%\n  mutate(\n    TOTAL = Young + `Economy Active` + Aged,\n    DEPENDENCY = (Young + Aged) / `Economy Active`\n  )\n\n# Ensure all PA and SZ values are uppercase for consistency\nfinal_data_2020 &lt;- final_data_2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n#Step 5: Merge the spatial data with the population data\nmpsz_pop2020 &lt;- left_join(mpsz, final_data_2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#quick-thematic-map-qtm",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#quick-thematic-map-qtm",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.1 Quick Thematic Map: qtm()",
    "text": "3.1 Quick Thematic Map: qtm()\nThe qtm() function provides a fast and simple way to create maps.\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, fill = \"DEPENDENCY\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#customizing-tmap-elements",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#customizing-tmap-elements",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.2 Customizing tmap elements",
    "text": "3.2 Customizing tmap elements\nExplore the core tmap elements, including layers, aesthetics, and customization options.\n\n3.2.1 Intro to TMAP\nA basic map can be created with the following code:\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n3.2.1.1 Explanation of tmap Elements:\n\ntm_shape(mpsz_pop2020): Defines the spatial object to be visualized, in this case, the mpsz_pop2020 dataset.\ntm_fill(): Adds a fill layer to the map based on the DEPENDENCY variable.\n\nstyle = \"quantile\": Classifies data into quantiles for better visual distribution.\npalette = \"Blues\": Specifies the color scheme for the map, using a sequential palette.\ntitle = \"Dependency ratio\": Sets the title for the legend.\n\ntm_layout(): Customizes the overall map layout.\n\nmain.title and its options: Adds a centered title to the map with customized size and positioning.\nlegend.height and legend.width: Adjusts the size of the legend.\nframe = TRUE: Adds a border around the map.\n\ntm_borders(alpha = 0.5): Adds semi-transparent borders to the map, enhancing visual separation between areas.\ntm_compass(type = \"8star\", size = 2): Adds a decorative compass with an eight-point star design to the map.\ntm_scale_bar(): Includes a scale bar, providing a reference for distance.\ntm_grid(alpha = 0.2): Adds a faint grid to the background, aiding spatial orientation.\ntm_credits(): Displays credits and data sources in the bottom-left corner of the map.\n\n\n\n3.2.1.2 Additional T-Map Elements\n\nDots and Symbols: Use tm_dots() for point data and tm_symbols() for more complex symbol mapping.\nLines: Add linear features using tm_lines(), which allows customization of line color, width, and style.\nText Labels: The tm_text() function displays labels on the map, with options for adjusting text size, color, and positioning.\nFaceting (Small Multiples): tm_facets() is useful for comparing data across time periods, categories, or regions.\nStacking Layers: Multiple tm_shape() calls can overlay different spatial objects, allowing mixed data types.\nRaster Data: For continuous surface data like heatmaps, use tm_raster().\nLegends: The tm_legend() function offers finer control over legend appearance.\nInteractive Viewing: When building interactive maps, tm_view() supports zooming and panning for web applications.\nGraticules and Grid Lines: Use tm_graticules() to add latitude and longitude lines for spatial orientation.\n\n\n\n\n3.2.2 Drawing Maps\n\n3.2.2.1 Set up the base map\n\ntm_shape(mpsz_pop2020) + tm_polygons()\n\n\n\n\n\n\n\n\n\n\n3.2.2.2 Set up choropleth map with TMAP and TM_Polygons\n\ntm_shape(mpsz_pop2020) + tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n3.2.2.3 Drawing a choropleth map using tm_fill() and *tm_border()\n\ntm_shape(mpsz_pop2020)+ tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n#With Borders\ntm_shape(mpsz_pop2020)+tm_fill(\"DEPENDENCY\") + tm_borders(lwd = 0.1,  alpha = 1)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#data-classification",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#data-classification",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.3 data classification",
    "text": "3.3 data classification\n\n3.3.1 Understanding Data Classification\nTechniques for categorizing continuous or categorical data into classes for better readability. tmap offers ten classification methods, including fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\n\nmap_quantile &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 5, style = \"quantile\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(title = \"quantile\", legend.outside = TRUE, legend.outside.size = 0.2)\n\nmap_equal &lt;- \n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 5, style = \"equal\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(title = \"equal\", legend.outside = TRUE, legend.outside.size = 0.2)\n\nmap_pretty &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 5, style = \"pretty\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(title = \"pretty\", legend.outside = TRUE, legend.outside.size = 0.2)\n\nmap_fisher &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 5, style = \"fisher\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(title = \"fisher\", legend.outside = TRUE, legend.outside.size = 0.2)\n\nmap_kmeans &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 5, style = \"kmeans\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(title = \"kmeans\", legend.outside = TRUE, legend.outside.size = 0.2)\n\n# Arrange maps with all legends displayed outside and scaled\ntmap_arrange(map_quantile, map_equal, map_pretty, \n             map_fisher, map_kmeans,\n             ncol = 2, nrow = 3)\n\n\n\n\n\n\n\n\n\n\n3.3.2 Classification and Data manipulation\nData lies all the time and it’s no difference from Maps, be careful on what are the classification method that we choose! Notice the different when we have different number of classification size.\n\n# Quantile Maps\nmap_quantile_2 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 2, style = \"quantile\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Quantile - 2 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_quantile_6 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 6, style = \"quantile\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Quantile - 6 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_quantile_10 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 10, style = \"quantile\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Quantile - 10 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_quantile_20 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 20, style = \"quantile\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Quantile - 20 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\n# Arrange the quantile maps in a grid\ntmap_arrange(map_quantile_2, map_quantile_6, map_quantile_10, map_quantile_20,\n             ncol = 2, nrow = 2)\n\n\n\n\n\n\n\n# Equal Interval Maps\nmap_equal_2 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 2, style = \"equal\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Equal - 2 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_equal_6 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 6, style = \"equal\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Equal - 6 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_equal_10 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 10, style = \"equal\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Equal - 10 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\nmap_equal_20 &lt;-\n  tm_shape(mpsz_pop2020) + \n    tm_fill(\"DEPENDENCY\", n = 20, style = \"equal\") + \n    tm_borders(alpha = 0.5) + \n    tm_layout(\n      main.title = \"Distribution Dependency - (Equal - 20 classes)\", \n      main.title.position = \"center\", \n      main.title.size = 0.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\n# Arrange the equal interval maps in a grid\ntmap_arrange(map_equal_2, map_equal_6, map_equal_10, map_equal_20,\n             ncol = 2, nrow = 2)\n\n\n\n\n\n\n\n\nThe choice between a smaller or larger n (number of classes) depends on the level of detail we want to show:\n\nSmaller n (e.g., 2 or 3 classes): Best for broad, simplified comparisons or when you want to emphasize clear distinctions between categories. Useful for general audiences or when the data has clear breakpoints.\nLarger n (e.g., 10 or 20 classes): Ideal for showing fine-grained differences and detecting subtle patterns. More useful when detailed analysis is needed, but it can overwhelm or confuse the viewer if not carefully chosen.\n\nThe decision is less about standard deviation and more about the purpose of your analysis: high n captures more detail, while low n simplifies the data.\n\n3.3.2.4 Custom Break\nAlternatively, we can always just use summary function to get some descriptive statistic and set custom breakpoints.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6519  0.7025  0.7742  0.7645 19.0000      92 \n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#color-scheme",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#color-scheme",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.4 color scheme",
    "text": "3.4 color scheme\nChoosing effective color schemes to enhance visual communication, with a focus on sequential, diverging, and categorical palettes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n      main.title = \"Blue Color Scheme\", \n      main.title.position = \"center\", \n      main.title.size = 1.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )\n\n\n\n\n\n\n\n# Reverse color\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n      main.title = \"Reverse Green Color Scheme\", \n      main.title.position = \"center\", \n      main.title.size = 1.5, \n      main.title.fontface = \"bold\", # Bold main title\n      legend.outside = TRUE, \n      legend.outside.size = 0.2\n    )"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#map-layouts",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#map-layouts",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.5 map layouts",
    "text": "3.5 map layouts\nCustomizing map layouts, including titles, legends, scale bars, and other cartographic elements.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n# Map Style\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n# tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#drawing-small-multiple-choropelth-maps",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#drawing-small-multiple-choropelth-maps",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.6 drawing small multiple choropelth maps",
    "text": "3.6 drawing small multiple choropelth maps\nGenerate multiple maps in a single visual output to compare different variables or time periods. Small multiple maps (facet maps) allow visualization of how spatial patterns change across categories.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"Young\", \"Aged\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"Aged\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"Young\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"Aged\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#mapping-spatial-object-meeting-a-selection-criterion",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#mapping-spatial-object-meeting-a-selection-criterion",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "3.7 mapping spatial object meeting a selection criterion",
    "text": "3.7 mapping spatial object meeting a selection criterion\nFilter and map spatial objects that satisfy specific conditions or criteria.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#age-cluster-by-years-and-sub-zones.",
    "href": "Hands_On_Exercises/Hands_On_Exercise_2/Hands_On_Exercise2.html#age-cluster-by-years-and-sub-zones.",
    "title": "Thematic Mapping and GeoVisualisation with R",
    "section": "4.1 Age Cluster By Years and Sub zones.",
    "text": "4.1 Age Cluster By Years and Sub zones.\nLet’s push the boundaries a bit! The goal is to visualize how the age clusters within each subzone have evolved over time. Although we haven’t fully explored interactivity yet, we can take on the challenge of creating a video GIF that sequentially combines maps for each year. We’ll wrap it up with a bird’s-eye comparison of the different years side by side.\n\n4.1.1 Preparing the data set\n\nWe Need to read the data set in\nFind and cluster the age groups\n\nFirst Get all the age group categories\nThen cluster then to young, economy active and aged.\n\nThen we full join the map to their individual values.\n\n\npopulation_data &lt;- read.csv(\"data/respopagesextod2011to2020.csv\")\n# Load the population data\n# Categorize age groups\nage_categories &lt;- unique(popdata$AG)\npopulation_data &lt;- population_data %&gt;%\n  mutate(\n    Age_Category = case_when(\n      AG %in% age_categories[1:5] ~ \"Young\",  # Age groups 0_to_4 until 20_to_24\n      AG %in% age_categories[6:13] ~ \"Economy Active\",  # Age groups 25_to_29 until 60_to_64\n      AG %in% age_categories[14:length(age_categories)] ~ \"Aged\",  # Age groups 65 and above\n      TRUE ~ \"Other\"\n    )\n  )\nanimation_maps &lt;- list()\nage_clusters &lt;- unique(population_data$Age_Category)\n\n\naggregated_data &lt;- population_data %&gt;%\n  group_by(SZ,Time,Age_Category) %&gt;%\n  summarise(Total_Population = sum(Pop, na.rm = TRUE)) %&gt;%\n  ungroup()\n\naggregated_data &lt;- aggregated_data %&gt;%\n  mutate_at(.vars = vars(SZ), \n          .funs = list(toupper))\n\n# Now join the aggregated population data into the expanded spatial data\nfinal_map_data &lt;- full_join(mpsz, aggregated_data, by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n4.1.1.1 Difference in the number of MPZ’s sub-zone versus Population’s sub-zones.\nWhile analyzing the data, we noticed that in the year 2020, there are more subzones than the usual 323 MPZ subzones. To address this, we can apply a simple filter to remove the excess subzones using the following code:\n\nunique_sz &lt;- unique(aggregated_data$SZ)\nunique_mpsz_sz &lt;- unique(mpsz$SUBZONE_N)\n\n# Find subzones in aggregated_data but not in mpsz\nmissing_in_mpsz &lt;- setdiff(unique_sz, unique_mpsz_sz)\ncat(\"Subzones in aggregated_data but not in mpsz:\\n\")\n\nSubzones in aggregated_data but not in mpsz:\n\nprint(missing_in_mpsz)\n\n [1] \"BAHAR\"                    \"BRICKLAND\"               \n [3] \"CLEANTECH\"                \"FOREST HILL\"             \n [5] \"GARDEN\"                   \"LAKESIDE (BUSINESS)\"     \n [7] \"LAKESIDE (LEISURE)\"       \"MURAI\"                   \n [9] \"NICOLL\"                   \"PARK\"                    \n[11] \"PLANTATION\"               \"TENGAH INDUSTRIAL ESTATE\"\n\n# Find subzones in mpsz but not in aggregated_data\nmissing_in_aggregated &lt;- setdiff(unique_mpsz_sz, unique_sz)\ncat(\"Subzones in mpsz but not in aggregated_data:\\n\")\n\nSubzones in mpsz but not in aggregated_data:\n\nprint(missing_in_aggregated)\n\ncharacter(0)\n\ncommon_subzones &lt;- intersect(unique(mpsz$SUBZONE_N), unique(aggregated_data$SZ))\nfinal_map_data &lt;- final_map_data %&gt;%\n  filter(SUBZONE_N %in% common_subzones)\n\n\n\n\n4.1.2 Generating the Gifs\n\n4.1.2.1 Logic and Steps\n\nStep 1; we categorize the data into different age clusters.\nFor each cluster, we filter the dataset,\ngenerate a map for each year, and then consolidate them.\nFinally, we create the GIF to visualize the changes over time.\n\n\nlibrary(tmap)\n\nage_clusters &lt;- unique(final_map_data$Age_Category)\n\n# Loop through each age category and generate a GIF\nfor (age_cluster in age_clusters) {\n  # Filter the data for the current age category\n  age_category_data &lt;- final_map_data %&gt;%\n    filter(Age_Category == age_cluster)\n  \n  # List to store each year’s map for the GIF\n  animation_frames &lt;- list()\n  \n  # Loop through each year and generate frames\n  years &lt;- unique(age_category_data$Time)\n  for (year in years) {\n    year_data &lt;- age_category_data %&gt;%\n      filter(Time == year)\n    \n    if (nrow(year_data) &gt; 0) {  # Ensure there is data for the year\n      # Create the map for the current year\n      map &lt;- tm_shape(year_data) +\n        tm_polygons(\"Total_Population\", style = \"quantile\", palette = \"-RdYlBu\", \n                    title = paste(age_cluster, \"Population in\", year)) +\n        tm_layout(\n          main.title = paste(\"Population Distribution for\", age_cluster, \"in\", year),\n          main.title.size = 1.0,  # Increase the title size for better visibility\n          main.title.fontface = \"bold\",  # Make the title bold\n          main.title.position = c(\"center\", \"top\"),  # Center align the title at the top\n          legend.position = c(\"center\", \"bottom\"),  # Move the legend below the map\n          legend.stack = \"horizontal\",  # Ensure the legend is stacked horizontally\n          frame = FALSE\n        )\n      \n      # Add the map to the list of frames\n      animation_frames[[as.character(year)]] &lt;- map\n    }\n  }\n  \n  # Dynamically create a single comparison map using tm_facets\n  comparison_map &lt;- tm_shape(age_category_data) +\n    tm_polygons(\"Total_Population\", style = \"quantile\", palette = \"-RdYlBu\", \n                title = paste(age_cluster, \"Population Comparison (2011-2020)\")) +\n    tm_facets(by = \"Time\", ncol = 2, free.coords = FALSE) +  # Arrange facets in 2 columns\n    tm_layout(\n      main.title = paste(\"Population Comparison for\", age_cluster, \"Across All Years\"),\n      main.title.size = 2,  # Max out the title size for the final frame\n      main.title.fontface = \"bold\",  # Make the title bold\n      main.title.position = c(\"center\", \"top\"),  # Center align the title at the top\n      legend.position = c(\"center\", \"bottom\"),  # Move the legend to the bottom\n      legend.stack = \"horizontal\",  # Ensure the legend is stacked horizontally for better fit\n      frame = FALSE\n    )\n  \n  # Add the comparison map as the final frame multiple times to extend its duration\n  for (i in 1:5) {  # Adding the final frame 5 times to simulate a 10-second delay (5 x 2 seconds)\n    animation_frames[[paste0(\"comparison_\", i)]] &lt;- comparison_map\n  }\n  \n  # Save the animation as a GIF with the correct delays\n  tmap_animation(animation_frames, \n                 filename = paste0(\"population_time_series_\", age_cluster, \".gif\"), \n                 delay = 200,  # 2 seconds per frame (2000 ms)\n                 width = 1500, height = 1200)  # Increase the size for better visibility\n  \n  cat(paste(\"Saved GIF for Age Category:\", age_cluster, \"\\n\"))\n}\n\nCreating frames\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n\nCreating animation\nAnimation saved to C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_2\\population_time_series_Aged.gif \nSaved GIF for Age Category: Aged \nCreating frames\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n\nCreating animation\nAnimation saved to C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_2\\population_time_series_Economy Active.gif \nSaved GIF for Age Category: Economy Active \nCreating frames\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n=====\n\n\n======\n\n\n=====\n\n\n\nCreating animation\nAnimation saved to C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_2\\population_time_series_Young.gif \nSaved GIF for Age Category: Young \n\ncat(\"All GIFs have been created.\\n\")\n\nAll GIFs have been created.\n\n\n\n\n\n4.1.3 Visualization of the GIFS.\n\n4.1.3.1 Age\n\n\n\n4.1.3.2 Economic Active\n\n\n\n4.1.3.3 Young"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html",
    "title": "Hands-On Exercise 1",
    "section": "",
    "text": "The code chunk below uses the p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n  pacman::p_load(sf, tidyverse)\n\nImporting the data"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#install-and-launching-r-packages",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#install-and-launching-r-packages",
    "title": "Hands-On Exercise 1",
    "section": "",
    "text": "The code chunk below uses the p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n  pacman::p_load(sf, tidyverse)\n\nImporting the data"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#methods-of-importing-geospatial-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#methods-of-importing-geospatial-data",
    "title": "Hands-On Exercise 1",
    "section": "Methods Of Importing Geospatial Data",
    "text": "Methods Of Importing Geospatial Data\n\nImporting polygon feature data in shapefile format\nUses st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a polygon feature data frame.\n\n  mpsz  = st_read(dsn = \"data/layer\", layer= \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_1\\data\\layer' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\nImporting polygon feature data in shapefile form\nUses st_read() function of sf package to import CyclingPath shapefile into R as line feature data frame.\n\n  cyclingpath = st_read(dsn = \"data/CyclingPath_Jul2024\", layer= \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_1\\data\\CyclingPath_Jul2024' \n  using driver `ESRI Shapefile'\nSimple feature collection with 3138 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42644.17 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\n\nImporting GIS data in kml format\nUses KML or Geojson to read instead\n\n  preschool = st_read(dsn = \"data/PreSchoolsLocation.geojson\")\n\nReading layer `PreSchoolsLocation' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_1\\data\\PreSchoolsLocation.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-On Exercise 1",
    "section": "Checking the Content of A Simple Feature Data Frame",
    "text": "Checking the Content of A Simple Feature Data Frame\n\nst_geometry()\nPrint only displays basic information of the feature class such as type of geometry\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\nglimpse()\nPrints Associated attribute information in the data frame\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\nhead()\nreveal complete information of a feature object\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30..."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#plotting-the-geospatial-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#plotting-the-geospatial-data",
    "title": "Hands-On Exercise 1",
    "section": "Plotting the Geospatial Data",
    "text": "Plotting the Geospatial Data\nsimple plot by R\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\nplot(mpsz)\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#working-with-projection",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#working-with-projection",
    "title": "Hands-On Exercise 1",
    "section": "Working with Projection",
    "text": "Working with Projection\n\nAssigning EPSG code to a simple feature data frame\nAn Common issue faced when importing geospatial data into R is that the coordinate system of the source data was either missing, we can use ST_CRS to map\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nNotice that sometimes, that EPSG code is wrong, and we can use st_set_crs to remap it\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\nWarning: st_crs&lt;- : replacing crs does not reproject data; use st_transform for\nthat\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nTransforming the projection of preschool from wgs84 to svy21\n\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\nst_crs(preschool3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_geometry(preschool3414)\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 11810.03 ymin: 25596.33 xmax: 45404.24 ymax: 49300.88\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nPOINT Z (25089.46 31299.16 0)\n\n\nPOINT Z (27189.07 32792.54 0)\n\n\nPOINT Z (28844.56 36773.76 0)\n\n\nPOINT Z (24821.92 46303.16 0)\n\n\nPOINT Z (28637.82 35038.49 0)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#importing-and-converting-an-aspatial-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-On Exercise 1",
    "section": "Importing and Converting An Aspatial Data",
    "text": "Importing and Converting An Aspatial Data\n\nImporting the aspatial data\n\nlistings &lt;- read_csv(\"data/listings.csv\")\n\nRows: 3540 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): listing_url, source, name, description, neighborhood_overview, pi...\ndbl  (38): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (6): host_is_superhost, host_has_profile_pic, host_identity_verified, ...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,540 × 75\n       id listing_url            scrape_id last_scraped source name  description\n    &lt;dbl&gt; &lt;chr&gt;                      &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;      \n 1  71609 https://www.airbnb.co…   2.02e13 2024-06-29   previ… Ensu… For 3 room…\n 2  71896 https://www.airbnb.co…   2.02e13 2024-06-29   city … B&B … &lt;NA&gt;       \n 3  71903 https://www.airbnb.co…   2.02e13 2024-06-29   city … Room… Like your …\n 4 275343 https://www.airbnb.co…   2.02e13 2024-06-29   city … 10mi… **IMPORTAN…\n 5 275344 https://www.airbnb.co…   2.02e13 2024-06-29   city … 15 m… Lovely hom…\n 6 289234 https://www.airbnb.co…   2.02e13 2024-06-29   previ… Book… This whole…\n 7 294281 https://www.airbnb.co…   2.02e13 2024-06-29   city … 5 mi… I have 3 b…\n 8 324945 https://www.airbnb.co…   2.02e13 2024-06-29   city … Comf… **IMPORTAN…\n 9 330095 https://www.airbnb.co…   2.02e13 2024-06-29   city … Rela… **IMPORTAN…\n10 344803 https://www.airbnb.co…   2.02e13 2024-06-29   city … Budg… Direct bus…\n# ℹ 3,530 more rows\n# ℹ 68 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;, …\n\n\n\n\nCreating a simple feature data frame from an aspatial data frame\nConverts listing data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nlistings_sf &lt;- st_as_sf(listings, \n                       coords = c(\"longitude\", \"latitude\"),\n                       crs=4326) %&gt;%\n  st_transform(crs = 3414)\nglimpse(listings_sf)\n\nRows: 3,540\nColumns: 74\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.024063e+13, 2.024063e+1…\n$ last_scraped                                 &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"city …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1 …\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"99%…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ host_total_listings_count                    &lt;dbl&gt; 11, 11, 11, 73, 73, 11, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; NA, 0.5, 0.5, 2.0, 2.5, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, 1, 1, 1, 1, 3, 2, 1, 1…\n$ beds                                         &lt;dbl&gt; NA, 1, 2, 1, 1, NA, 1, 1,…\n$ amenities                                    &lt;chr&gt; \"[\\\"Free parking on premi…\n$ price                                        &lt;chr&gt; NA, \"$80.00\", \"$80.00\", \"…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 30, 30, 28, 0, 29, 30…\n$ availability_60                              &lt;dbl&gt; 59, 53, 60, 58, 0, 58, 60…\n$ availability_90                              &lt;dbl&gt; 89, 83, 90, 62, 0, 88, 90…\n$ availability_365                             &lt;dbl&gt; 89, 148, 90, 62, 0, 88, 3…\n$ calendar_last_scraped                        &lt;date&gt; 2024-06-29, 2024-06-29, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 2, 0, 0, 1, 1…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 7, 49…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 6, 6, 6, 49, 49, 6, 6, 49…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.15, 0.29, 0.15, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#geoprocessing-with-sf-package",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#geoprocessing-with-sf-package",
    "title": "Hands-On Exercise 1",
    "section": "Geoprocessing with sf package",
    "text": "Geoprocessing with sf package\n\nBuffering\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                               dist=5, nQuadSegs = 30)\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n2218855 [m^2]\n\n\n\n\nPoint-in-polygon count\n\nThe scenario:\nA pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\n\n\nsolution:\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 18 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count          Area\n1    4339824 MULTIPOLYGON (((42196.76 38...           72 4339824 [m^2]\n    PreSch Density\n1 16.59053 [1/m^2]"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#exploratory-data-analysis-eda",
    "href": "Hands_On_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html#exploratory-data-analysis-eda",
    "title": "Hands-On Exercise 1",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#importing-spatial-data",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#importing-spatial-data",
    "title": "Spatial Point Patterns Analysis",
    "section": "4.1 Importing Spatial Data",
    "text": "4.1 Importing Spatial Data\n\nChildcare dataCostal Outlinemp14_subzone\n\n\n\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\nsg_sf &lt;- st_read(dsn = \"data\", layer=\"CostalOutline\")\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\n\n\n\n4.1.1 DIY:Use the appropriate SF function to retrieve the referencing system information of these geospatial data.\nSimple, use the st_crs function from SF to check and print the crs information\n\n# Retrieve CRS information\nchildcare_crs &lt;- st_crs(childcare_sf)\nsg_crs &lt;- st_crs(sg_sf)\nmpsz_crs &lt;- st_crs(mpsz_sf)\n\n# Print CRS information\nprint(childcare_crs)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nprint(sg_crs)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\nprint(mpsz_crs)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n4.1.2 DIY: Assign the correct CRS to MPSZ_SF and SG_SF Simple Feature Data frames.\nnotice that the MPSZ_SF and SG_SF is in World Geodetic System 1984 format, we need set the correct crs to these data and we can do so using the st transform. We can do so using the transform method\n\nChanging to CRSCheck if its the right CRS\n\n\n\nmpsz_sf &lt;- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nsg_sf &lt;- st_read(dsn = \"data\", layer = \"CostalOutline\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `CostalOutline' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n\n\n\n\n\nprint(st_crs(mpsz_sf))\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nprint(st_crs(sg_sf))\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\n\n4.1.3 Change the referencing System to Singapore National Projected Coordinate System\n\n\n\n\n\n\nNote\n\n\n\nUnderstanding the CRS in Our Data:\n\nMPZ and Coastal Data:\n\nCRS: SVY21, which is the Singapore National Projected Coordinate System based on WGS84.\nDescription: This is a common projected coordinate system used in Singapore for accurate mapping.\n\nChildcare Data:\n\nCRS: SVY21 / Singapore TM (Transverse Mercator projection).\nDescription: This is also a projection based on SVY21, specifically using the Transverse Mercator projection. It is very close to the SVY21 system, with minor differences in how the projection is handled.\n\n\nGiven that the map file serves as the base, we want all spatial data to overlay correctly, we should:\n\nTransform the GeoJSON Data to Match the Map File’s CRS:\n\nSince our MPZ and Coastal data are already in SVY21 (EPSG:3414), transform the GeoJSON data to EPSG:3414 as well.\n\nRationale:\n\nThis approach ensures that the childcare locations from the GeoJSON data will be accurately plotted within the boundaries and context provided by the map file (MPZ and Coastal data).\nIt avoids potential issues with misalignment, especially since oour base map data is already set up in a local projection suitable for Singapore.\n\n\n\n\n\n# Transform Childcare data to match the base map's CRS (EPSG:3414)\nchildcare_sf &lt;- st_read(\"data/child-care-services-geojson.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\Hands_On_Exercises\\Hands_On_Exercise_3\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# Now, all datasets should be aligned in the same CRS\n\n\n\n4.1.4 Checking for validity of maps\nWhen working with spatial data, it’s crucial to ensure that all geometries are valid. Invalid geometries can cause errors in analysis and visualization.\n\nChecking Validity with st_is_valid():\nIdentifying Invalid Geometries:\nFixing Invalid Geometries with st_make_valid()\n\n\nMPZSGChildcare\n\n\n\nmpsz_validity &lt;- st_is_valid(mpsz_sf)\nmpsz_invalid &lt;- which(!mpsz_validity)\nif (length(mpsz_invalid) &gt; 0) {\n  print(\"MPZ Invalid!\")\n  print(mpsz_sf[mpsz_invalid, ])\n} else {\n  print(\"it's valid!\")\n}\n\n[1] \"MPZ Invalid!\"\nSimple feature collection with 9 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 12535.88 ymin: 21678.35 xmax: 56396.44 ymax: 49291.03\nProjected CRS: SVY21 / Singapore TM\n    OBJECTID SUBZONE_NO             SUBZONE_N SUBZONE_C CA_IND\n19        19          2        SOUTHERN GROUP    SISZ02      N\n20        20          1               SENTOSA    SISZ01      N\n24        24          1       MARITIME SQUARE    BMSZ01      N\n122      122          9           JURONG PORT    JESZ09      N\n123      123          3               SAMULUN    BLSZ03      N\n128      128          9                PANDAN    CLSZ09      N\n258      258          4        PASIR RIS PARK    PRSZ04      N\n302      302          1 NORTH-EASTERN ISLANDS    NESZ01      N\n320      320          9           NORTH COAST    WDSZ09      N\n               PLN_AREA_N PLN_AREA_C          REGION_N REGION_C\n19       SOUTHERN ISLANDS         SI    CENTRAL REGION       CR\n20       SOUTHERN ISLANDS         SI    CENTRAL REGION       CR\n24            BUKIT MERAH         BM    CENTRAL REGION       CR\n122           JURONG EAST         JE       WEST REGION       WR\n123              BOON LAY         BL       WEST REGION       WR\n128              CLEMENTI         CL       WEST REGION       WR\n258             PASIR RIS         PR       EAST REGION       ER\n302 NORTH-EASTERN ISLANDS         NE NORTH-EAST REGION      NER\n320             WOODLANDS         WD      NORTH REGION       NR\n             INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng SHAPE_Area\n19  5809FC547293EA2D 2014-12-05 29815.09 23412.59  25626.977    2206319\n20  A6FCDC9C447952CB 2014-12-05 27593.94 25813.35  17496.194    4919132\n24  C1AC31ABF9978DDB 2014-12-05 25805.79 27911.42  13737.116    2701634\n122 0664CA7EF6504AE5 2014-12-05 15250.74 32183.92  11355.002    2464857\n123 F78E0287D3F24214 2014-12-05 13418.49 32264.59   8738.679    1940693\n128 A6EE4A49376B69C4 2014-12-05 19228.60 32265.40   5689.647    1312923\n258 9856E3CDCF57AD96 2014-12-05 41529.80 40218.94   8533.964    1719705\n302 92BC3E09C68F3B52 2014-12-05 50424.79 42612.88  62436.235   67250563\n320 898B2436858382A1 2014-12-05 22147.04 48031.55  10847.882    2450784\n                          geometry\n19  MULTIPOLYGON (((29712.51 23...\n20  MULTIPOLYGON (((26858.1 266...\n24  MULTIPOLYGON (((26514.58 28...\n122 MULTIPOLYGON (((14483.48 31...\n123 MULTIPOLYGON (((12861.38 32...\n128 MULTIPOLYGON (((19680.06 31...\n258 MULTIPOLYGON (((41343.11 40...\n302 MULTIPOLYGON (((52567.43 46...\n320 MULTIPOLYGON (((21693.06 48...\n\n\nNotice that MPZ has 9 invalidity of sub zones here, so we have to make it valid through the function make valid. Once it’s valid we then check again\n\nmpsz_sf &lt;- st_make_valid(mpsz_sf)\nmpsz_validity &lt;- st_is_valid(mpsz_sf)\nmpsz_invalid &lt;- which(!mpsz_validity)\nif (length(mpsz_invalid) &gt; 0) {\n  print(\"MPZ Invalid!\")\n  print(mpsz_sf[mpsz_invalid, ])\n} else {\n  print(\"it's valid!\")\n}\n\n[1] \"it's valid!\"\n\n\n\n\n\nsg_validity &lt;- st_is_valid(sg_sf)\nsg_invalid &lt;- which(!sg_validity)\nif (length(sg_invalid) &gt; 0) {\n  print(\"SG Invalid!\")\n  print(mpsz_sf[mpsz_invalid, ])\n} else {\n  print(\"it's valid!\")\n}\n\n[1] \"SG Invalid!\"\nSimple feature collection with 0 features and 15 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n [1] OBJECTID   SUBZONE_NO SUBZONE_N  SUBZONE_C  CA_IND     PLN_AREA_N\n [7] PLN_AREA_C REGION_N   REGION_C   INC_CRC    FMEL_UPD_D X_ADDR    \n[13] Y_ADDR     SHAPE_Leng SHAPE_Area geometry  \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nIn SG_SF there’s one invalid as well, so we apply the fix.\n\nsg_sf &lt;- st_make_valid(sg_sf)\nsg_validity &lt;- st_is_valid(sg_sf)\nsg_invalid &lt;- which(!sg_validity)\nif (length(sg_invalid) &gt; 0) {\n  print(\"SG Invalid!\")\n  print(mpsz_sf[sg_invalid, ])\n} else {\n  print(\"it's valid!\")\n}\n\n[1] \"it's valid!\"\n\n\n\n\nNotice that childcare is a geojson data and it houses it’s data in the description column, we need to break this up to get more meaningful data.\nWe can do a simple extraction from the Description attribute and map the data better. Assuming that each Table Row (TR) contains a Table Head (TH) and a Table Data (TD), we can map the data accordingly.\n\nchildcare_validity &lt;- st_is_valid(childcare_sf)\nchildcare_invalid &lt;- which(!childcare_validity)\nif (length(childcare_invalid) &gt; 0) {\n  print(\"ChildCare Invalid!\")\n  print(childcare_sf[childcare_invalid, ])\n} else {\n  print(\"it's valid!\")\n}\n\n[1] \"it's valid!\"\n\n# Ensure the geometry column is preserved\ngeometry_column &lt;- st_geometry(childcare_sf)\nparse_description &lt;- function(html_string) {\n  html &lt;- read_html(html_string)\n  html &lt;- html %&gt;% html_nodes(\"tr\") %&gt;% .[!grepl(\"Attributes\", .)]\n  headers &lt;- html %&gt;% html_nodes(\"th\") %&gt;% html_text(trim = TRUE)\n  values &lt;- html %&gt;% html_nodes(\"td\") %&gt;% html_text(trim = TRUE)\n  \n  # Handle cases where the number of headers and values don't match\n  if (length(headers) != length(values)) {\n    max_length &lt;- max(length(headers), length(values))\n    headers &lt;- c(headers, rep(\"ExtraHeader\", max_length - length(headers)))\n    values &lt;- c(values, rep(\"NULL\", max_length - length(values)))\n  }\n  \n  setNames(values, headers)\n}\n\n# Apply parsing function, unnest the description fields, and remove the original 'Description' column\nchildcare_sf &lt;- childcare_sf %&gt;% \n  mutate(Description_parsed = map(Description, parse_description)) %&gt;%\n  unnest_wider(Description_parsed) %&gt;%\n  select(-Description)  # Remove the original 'Description' column\n\n# Overwrite the 'Name' column with the 'LANDYADDRESSPOINT' column values\nchildcare_sf &lt;- childcare_sf %&gt;%\n  mutate(Name = NAME)  # Overwrite 'Name' with 'LANDYADDRESSPOINT'\n\n# Replace empty strings or NA across all columns with \"NULL\"\nchildcare_sf &lt;- childcare_sf %&gt;%\n  mutate(across(!geometry, ~ ifelse(is.na(.) | . == \"\", \"NULL\", .)))\n\n# Reassign the geometry to the dataframe\nst_geometry(childcare_sf) &lt;- geometry_column\n# Ensure it's still an sf object\nclass(childcare_sf)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#mapping-the-geospatial-datasets.",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#mapping-the-geospatial-datasets.",
    "title": "Spatial Point Patterns Analysis",
    "section": "4.2 Mapping the geospatial datasets.",
    "text": "4.2 Mapping the geospatial datasets.\n\nDIY PLOT MapDIY View Interactivity\n\n\nUsing the mapping methods you learned in Hands-on Exercise 3, prepare a static map\n\n# Suppress the tmap mode message\nsuppressMessages({\n  tmap_mode(\"plot\")  # Use \"view\" for an interactive map or \"plot\" for a static map\n})\n\n# Create the map\ntm &lt;- tm_shape(mpsz_sf) + \n  tm_polygons(col = \"grey\", border.col = \"black\", alpha = 0.5) +  # Base map with subzones\n  tm_shape(childcare_sf) + \n  tm_dots(col = \"black\", size = 0.05) +  # Plot childcare locations as dots\n   tm_layout(\n    main.title = \"Childcare Locations on Singapore Map\",\n    main.title.position = c(\"center\"),  # Center the title at the top\n    outer.margins = c(0.1, 0, 0, 0),  # Adjust outer margins to make space for the title\n    legend.outside = TRUE,  # Keep legend outside the map area\n    legend.outside.position = \"bottom\"  # Position the legend at the bottom\n  )\ntm\n\n\n\n\n\n\n\n\n\n\nwe can also prepare a pin map by using the code chunk below.\n\nsuppressMessages({\n  tmap_mode(\"view\")  # Use \"view\" for an interactive map or \"plot\" for a static map\n})\n\ntm &lt;- tm_shape(mpsz_sf) + \n  tm_polygons(col = \"grey\", border.col = \"black\", alpha = 0.5) +  # Base map with subzones\n  tm_shape(childcare_sf) + \n  tm_dots(col = \"black\", size = 0.05) +  # Plot childcare locations as dots\n   tm_layout(\n    title = \"Childcare Locations on Singapore Map\",\n    title.position = c(\"center\"),  # Center the title at the top\n    outer.margins = c(0.1, 0, 0, 0),  # Adjust outer margins to make space for the title\n    legend.outside = TRUE,  # Keep legend outside the map area\n    legend.outside.position = \"bottom\"  # Position the legend at the bottom\n  )\n\ntm"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#data-frame-to-spatial-class",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#data-frame-to-spatial-class",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.1 Data frame to Spatial Class",
    "text": "5.1 Data frame to Spatial Class\nUse as_Spatial() to convert the data from dataframe to spatial class, we can check so using the class function or simply display it.\n\nChildcareMpszSG\n\n\n\nchildcare &lt;- as_Spatial(childcare_sf)\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1545 \nextent      : 11203.01, 45404.24, 25667.6, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 16\nnames       :                    Name, ADDRESSBLOCKHOUSENUMBER, ADDRESSBUILDINGNAME, ADDRESSPOSTALCODE,                                                                       ADDRESSSTREETNAME, ADDRESSTYPE,         DESCRIPTION, HYPERLINK, LANDXADDRESSPOINT, LANDYADDRESSPOINT,                    NAME, PHOTOURL, ADDRESSFLOORNUMBER,          INC_CRC,     FMEL_UPD_D, ... \nmin values  :    3-IN-1 FAMILY CENTRE,                    NULL,                NULL,            018989,                                                  1 & 3, Stratton Road, SINGAPORE 806787,        NULL, Child Care Services,      NULL,                 0,                 0,    3-IN-1 FAMILY CENTRE,     NULL,               NULL, 00A958622500BF89, 20200812221033, ... \nmax values  : ZEE SCHOOLHOUSE PTE LTD,                    NULL,                NULL,            829646, UPPER BASEMENT LEVEL, WEST WING, TERMINAL 1, SINGAPORE CHANGI AIRPORT, SINGAPORE 819642,        NULL,                NULL,      NULL,                 0,                 0, ZEE SCHOOLHOUSE PTE LTD,     NULL,               NULL, FFCFA88A8CE5665A, 20200826094036, ... \n\nclass(childcare)\n\n[1] \"SpatialPointsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\n\n\n\n\nmpsz &lt;- as_Spatial(mpsz_sf)\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nclass(mpsz)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\"\n\n\n\n\n\nsg &lt;- as_Spatial(sg_sf)\nsg\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 60 \nextent      : 2663.926, 56047.79, 16357.98, 50244.03  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 4\nnames       : GDO_GID, MSLINK, MAPID,              COSTAL_NAM \nmin values  :       1,      1,     0,             ISLAND LINK \nmax values  :      60,     67,     0, SINGAPORE - MAIN ISLAND \n\nclass(sg)\n\n[1] \"SpatialPolygonsDataFrame\"\nattr(,\"package\")\n[1] \"sp\""
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#converting-spatial-class-into-generic-ppp-format",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#converting-spatial-class-into-generic-ppp-format",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.2 Converting Spatial Class into generic PPP Format",
    "text": "5.2 Converting Spatial Class into generic PPP Format\nAs Spatstat requires analytical data in ppp object form. We have to map the data to a PPP object. The following steps breakdown the method to convert a SF to PPP object.\n\nExtract Coordinates (st_coordinates(childcare_sf)):\nThis step extracts the x (longitude) and y (latitude) coordinates from the sf object. The result is a matrix with two columns—one for each coordinate. These coordinates represent the location of each point in our spatial dataset.\n\n\n\nGet Bounding Box (st_bbox(childcare_sf)):\nThis function retrieves the bounding box of the sf object, which is the smallest rectangle that can enclose all the points in the dataset. The bounding box provides the minimum and maximum x and y values (xmin, xmax, ymin, ymax)\nCreate Observation Window (owin()):\nUsing the bounding box values, you create an observation window. This window defines the spatial limits (study area) for the point pattern analysis. It ensures that all points lie within these specified boundaries.\nCreate ppp Object (ppp()):\nFinally, we combine the extracted coordinates and the defined observation window into a ppp object using the ppp() function. The ppp object is the required format for analyzing point patterns in the spatstat package, enabling us to conduct spatial analyses on our data.\n\n\n# Extract coordinates\nchildcare_coords &lt;- st_coordinates(childcare_sf)\n\n# Define the window using the bounding box\nchildcare_bbox &lt;- st_bbox(childcare_sf)\nchildcare_window &lt;- owin(xrange = childcare_bbox[c(\"xmin\", \"xmax\")], yrange = childcare_bbox[c(\"ymin\", \"ymax\")])\n\n# Create the ppp object\nchildcare_ppp &lt;- ppp(x = childcare_coords[, 1], y = childcare_coords[, 2], window = childcare_window)\n\n# Check the ppp object\nsummary(childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\nplot(childcare_ppp)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#checking-for-duplicate-data.",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#checking-for-duplicate-data.",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.3 Checking for duplicate data.",
    "text": "5.3 Checking for duplicate data.\n\n5.3.1 Code to analyse for duplicate data.\n\nCheck For Any DuplicateCount No. of co-indicence pointLocation With &gt; 1 Point Event\n\n\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\n\n\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    3    1    1    1    1    2    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    9    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    2    1    1    3    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    2    1    1    1    1    1    2    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    3    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    2    1    1    1    3    1    1    1    2    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    3    2 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    2    1    1    1    2    2    3    1    5    1    5    1    1    1    2 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    2    1    1    1    1    1    1    2    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    4    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    2    2    1    1    1    1    2    1    4    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    3 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    9    1    1    2    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    5    1    1    1    1    1    2    1    1    2    2    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    2    2    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    9    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    2    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    9    9    1    1    1    1    1    1    1    1    1    1    2    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   2    1    1    1    1    1    1    1    1    1    1    1    2    2    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    2 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    3    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    3    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    2    2    1    1    1    1    2    1    1    2    1    1    1    2    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    2    1    1    1    1    1    9    1    4    1    2    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   2    1    1    1    1    1    1    1    2    1    2    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    2    1    2    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    4    1    1    1    1    1    4    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    4    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   3    1    1    1    2    1    1    1    3    1    1    3    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    2    2    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    2    2    1    1    1    5    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    9    1    2    2    1    1    1    2    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    2    1    1    1    3    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   9    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    2    1    2    1    1    1    2    2    2    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    3    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    4    1    1    1    1    1    2    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    9    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    2    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    5    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    2    1    1    1    1    2    1    1    1    1    3 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 \n   1    1    1    1    1    1    2    1    1 \n\n\n\n\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 128\n\n\n\n\n\n\n\n5.3.2 Spot duplicate points from the map\n\n# Identify duplicates in the ppp object\nchildcare_duplicate_indices &lt;- duplicated(childcare_ppp)\n# Extract the coordinates of duplicate points\nchildcare_duplicate_coords &lt;- childcare_ppp[childcare_duplicate_indices]\n# Plot the original points\nplot(childcare_ppp, main = \"Childcare Locations with Duplicate Points Highlighted\")\n# Overlay duplicate points in a different color\npoints(childcare_duplicate_coords$x, childcare_duplicate_coords$y, col = \"red\", pch = 19, cex = 0.7)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#handling-duplicates-events.",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#handling-duplicates-events.",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.4 Handling Duplicates Events.",
    "text": "5.4 Handling Duplicates Events.\n\n5.4.1 Methods to Handle Duplicates\nThree Methods\n\nDeleting Duplicates (unique_childcare_ppp): Removes duplicate points, resulting in a dataset with only unique events.\n\n\n\nJittering Duplicates (jittered_childcare_ppp): Slightly perturbs duplicate points to distinguish them spatially, preventing them from overlapping completely.\nUnique Marks (marked_childcare_ppp): Attaches a “mark” to each point, especially duplicates, which can be used later in the analysis to account for the fact that these points were originally duplicates.\n\n\nDeleteJitteringUnique Marks\n\n\n\nunique_childcare_ppp &lt;- childcare_ppp[!duplicated(childcare_ppp)]\n\n# Check the ppp object after removing duplicates\nsummary(unique_childcare_ppp)\n\nPlanar point pattern:  1471 points\nAverage intensity 1.819898e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\nplot(unique_childcare_ppp, main = \"Childcare Locations Without Duplicates\")\n\n\n\n\n\n\n\n\n\n\n\n# Jitter the coordinates to handle duplicates\njittered_coords &lt;- childcare_coords\njittered_coords[duplicated(childcare_ppp), ] &lt;- jitter(jittered_coords[duplicated(childcare_ppp), ], amount = 0.01)\n\n# Create a new ppp object with jittered points\njittered_childcare_ppp &lt;- ppp(x = jittered_coords[, 1], y = jittered_coords[, 2], window = childcare_window)\n\n# Check the ppp object after jittering\nsummary(jittered_childcare_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\nplot(jittered_childcare_ppp, main = \"Childcare Locations with Jittered Duplicates\")\n\n\n\n\n\n\n\n\n\n\n\n# Create marks for duplicates\nmarks &lt;- rep(1, npoints(childcare_ppp))\nmarks[duplicated(childcare_ppp)] &lt;- 2\n\n# Create a new ppp object with marks attached to each point\nmarked_childcare_ppp &lt;- ppp(x = childcare_coords[, 1], y = childcare_coords[, 2], window = childcare_window, marks = marks)\n\n# Check the ppp object with unique marks\nsummary(marked_childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 11 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   1.000   1.000   1.048   1.000   2.000 \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\nplot(marked_childcare_ppp, main = \"Childcare Locations with Unique Marks\", cols = c(\"black\", \"red\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.4.2 Last check for duplicates\n\nany(duplicated(unique_childcare_ppp))\n\n[1] FALSE\n\nany(duplicated(jittered_childcare_ppp))\n\n[1] FALSE\n\nany(duplicated(marked_childcare_ppp))\n\n[1] TRUE\n\n\nNotice that mark will still make it true, because there are still duplicates but marked differently.\nI would use jittered from here forward"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#creating-owin-object",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#creating-owin-object",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.5 Creating OWIN Object",
    "text": "5.5 Creating OWIN Object\nOWIN is used to represent the polygonal region, and we us the SG_SF to plot the map.\n\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e+03     -9.76e-06\npolygon 2               55  8.25379e+04      1.14e-04\npolygon 3               90  4.15092e+05      5.72e-04\npolygon 4               49  1.66986e+04      2.30e-05\npolygon 5               38  2.42492e+04      3.34e-05\npolygon 6              976  2.33447e+07      3.22e-02\npolygon 7              721  1.92795e+06      2.66e-03\npolygon 8             1989  9.99217e+06      1.38e-02\npolygon 9              330  1.11896e+06      1.54e-03\npolygon 10             175  9.25904e+05      1.28e-03\npolygon 11             115  9.28394e+05      1.28e-03\npolygon 12              24  6.35239e+03      8.76e-06\npolygon 13 (hole)        3 -1.06765e+00     -1.47e-09\npolygon 14             190  2.02489e+05      2.79e-04\npolygon 15              37  1.01705e+04      1.40e-05\npolygon 16              25  1.66227e+04      2.29e-05\npolygon 17              10  2.14507e+03      2.96e-06\npolygon 18              66  1.61841e+04      2.23e-05\npolygon 19            5195  6.36837e+08      8.78e-01\npolygon 20              76  3.12332e+05      4.31e-04\npolygon 21             627  3.18913e+07      4.40e-02\npolygon 22              20  3.28420e+04      4.53e-05\npolygon 23              42  5.58317e+04      7.70e-05\npolygon 24              67  1.31354e+06      1.81e-03\npolygon 25             734  4.69093e+06      6.47e-03\npolygon 26              16  3.19460e+03      4.40e-06\npolygon 27              15  4.87296e+03      6.72e-06\npolygon 28              15  4.46420e+03      6.15e-06\npolygon 29              14  5.46674e+03      7.54e-06\npolygon 30              37  5.26194e+03      7.25e-06\npolygon 31             111  6.62927e+05      9.14e-04\npolygon 32              69  5.63134e+04      7.76e-05\npolygon 33             143  1.45139e+05      2.00e-04\npolygon 34             397  2.48821e+06      3.43e-03\npolygon 35              90  1.15991e+05      1.60e-04\npolygon 36              98  6.26829e+04      8.64e-05\npolygon 37             165  3.38736e+05      4.67e-04\npolygon 38             130  9.40465e+04      1.30e-04\npolygon 39              93  4.30642e+05      5.94e-04\npolygon 40              16  2.01046e+03      2.77e-06\npolygon 41             415  3.25384e+06      4.49e-03\npolygon 42              30  1.08382e+04      1.49e-05\npolygon 43              53  3.44003e+04      4.74e-05\npolygon 44              26  8.34758e+03      1.15e-05\npolygon 45              74  5.82234e+04      8.03e-05\npolygon 46             327  2.16921e+06      2.99e-03\npolygon 47             177  4.67446e+05      6.44e-04\npolygon 48              46  6.99702e+05      9.65e-04\npolygon 49               6  1.68410e+04      2.32e-05\npolygon 50              13  7.00873e+04      9.66e-05\npolygon 51               4  9.45963e+03      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#combining-point-events-object-and-owin-object",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#combining-point-events-object-and-owin-object",
    "title": "Spatial Point Patterns Analysis",
    "section": "5.6 Combining Point events object and owin object",
    "text": "5.6 Combining Point events object and owin object\nExtract and combine the point and polygon feaature in one ppp object.\n\nchildcareSG_ppp = jittered_childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e+03     -9.76e-06\npolygon 2               55  8.25379e+04      1.14e-04\npolygon 3               90  4.15092e+05      5.72e-04\npolygon 4               49  1.66986e+04      2.30e-05\npolygon 5               38  2.42492e+04      3.34e-05\npolygon 6              976  2.33447e+07      3.22e-02\npolygon 7              721  1.92795e+06      2.66e-03\npolygon 8             1989  9.99217e+06      1.38e-02\npolygon 9              330  1.11896e+06      1.54e-03\npolygon 10             175  9.25904e+05      1.28e-03\npolygon 11             115  9.28394e+05      1.28e-03\npolygon 12              24  6.35239e+03      8.76e-06\npolygon 13 (hole)        3 -1.06765e+00     -1.47e-09\npolygon 14             190  2.02489e+05      2.79e-04\npolygon 15              37  1.01705e+04      1.40e-05\npolygon 16              25  1.66227e+04      2.29e-05\npolygon 17              10  2.14507e+03      2.96e-06\npolygon 18              66  1.61841e+04      2.23e-05\npolygon 19            5195  6.36837e+08      8.78e-01\npolygon 20              76  3.12332e+05      4.31e-04\npolygon 21             627  3.18913e+07      4.40e-02\npolygon 22              20  3.28420e+04      4.53e-05\npolygon 23              42  5.58317e+04      7.70e-05\npolygon 24              67  1.31354e+06      1.81e-03\npolygon 25             734  4.69093e+06      6.47e-03\npolygon 26              16  3.19460e+03      4.40e-06\npolygon 27              15  4.87296e+03      6.72e-06\npolygon 28              15  4.46420e+03      6.15e-06\npolygon 29              14  5.46674e+03      7.54e-06\npolygon 30              37  5.26194e+03      7.25e-06\npolygon 31             111  6.62927e+05      9.14e-04\npolygon 32              69  5.63134e+04      7.76e-05\npolygon 33             143  1.45139e+05      2.00e-04\npolygon 34             397  2.48821e+06      3.43e-03\npolygon 35              90  1.15991e+05      1.60e-04\npolygon 36              98  6.26829e+04      8.64e-05\npolygon 37             165  3.38736e+05      4.67e-04\npolygon 38             130  9.40465e+04      1.30e-04\npolygon 39              93  4.30642e+05      5.94e-04\npolygon 40              16  2.01046e+03      2.77e-06\npolygon 41             415  3.25384e+06      4.49e-03\npolygon 42              30  1.08382e+04      1.49e-05\npolygon 43              53  3.44003e+04      4.74e-05\npolygon 44              26  8.34758e+03      1.15e-05\npolygon 45              74  5.82234e+04      8.03e-05\npolygon 46             327  2.16921e+06      2.99e-03\npolygon 47             177  4.67446e+05      6.44e-04\npolygon 48              46  6.99702e+05      9.65e-04\npolygon 49               6  1.68410e+04      2.32e-05\npolygon 50              13  7.00873e+04      9.66e-05\npolygon 51               4  9.45963e+03      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\n\nPlot the map as shown below here by:\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#kernel-density-estimation",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#kernel-density-estimation",
    "title": "Spatial Point Patterns Analysis",
    "section": "6.1 Kernel Density Estimation",
    "text": "6.1 Kernel Density Estimation\n\n6.1.1 Understanding KDE\nKernel Density Estimation (KDE) is a non-parametric way to estimate the probability density function of a random variable. In spatial analysis, KDE is used to estimate the intensity of point patterns across a study area, which helps to identify hotspots or areas with high concentrations of events (e.g., childcare locations).\nSteps in KDE:\n\nKernel Function:\n\nThe kernel function is a smooth, symmetric function (often Gaussian) that is used to estimate the density at each point. It determines how much influence each point has on the surrounding area.\nIn the spatial context, each point in your dataset contributes to the density estimate, with its influence decreasing with distance according to the kernel function.\n\nBandwidth (sigma):\n\nThe bandwidth parameter (sigma) controls the width of the kernel function. It determines the scale of smoothing:\n\nSmall bandwidth: Results in a more detailed map with sharper peaks but may be too sensitive to noise.\nLarge bandwidth: Produces a smoother map but may oversmooth the data, losing important details.\n\nBandwidth selection is crucial for accurate density estimation. One common method for selecting bandwidth is Diggle’s bandwidth (bw.diggle), which is specifically designed for spatial point patterns.\n\nEdge Correction:\n\nWhen performing KDE on finite study areas, edge effects can bias the density estimates near the boundaries.\nEdge correction (edge=TRUE) adjusts for this by accounting for the missing density outside the boundaries, leading to more accurate results near the edges.\n\nDensity Calculation:\n\nThe KDE produces a continuous surface (usually a raster or grid) where each cell represents the estimated density of points. Higher values indicate areas with a higher concentration of points.\n\n\n\n\n6.1.2 As Seen in Code\nBreaking Down the Code:\n\ndensity(childcareSG_ppp, ...):\n\nThis function from the spatstat package computes the Kernel Density Estimation (KDE) for the ppp object childcareSG_ppp.\n\nsigma=bw.diggle:\n\nsigma specifies the bandwidth (smoothing parameter). Here, bw.diggle is used to automatically calculate the optimal bandwidth based on Diggle’s method, which balances the trade-off between detail and smoothness.\n\nedge=TRUE:\n\nThis argument enables edge correction, adjusting the density estimate near the boundaries of the study area to avoid underestimation due to the edge effect.\n\nkernel=\"gaussian\":\n\nSpecifies the type of kernel function to use. The Gaussian kernel is the most commonly used, providing a smooth, bell-shaped curve that smoothly decreases in influence as distance from the point increases.\n\n\n\nkde_childcareSG_bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_childcareSG_bw)\n\n\n\n\n\n\n\n\nRetrieving the bandwidth to compute the kde layer\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n298.4095 \n\n\n\n\n6.1.3 Rescaling KDE Values\n\nsummary(childcareSG_ppp)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e+03     -9.76e-06\npolygon 2               55  8.25379e+04      1.14e-04\npolygon 3               90  4.15092e+05      5.72e-04\npolygon 4               49  1.66986e+04      2.30e-05\npolygon 5               38  2.42492e+04      3.34e-05\npolygon 6              976  2.33447e+07      3.22e-02\npolygon 7              721  1.92795e+06      2.66e-03\npolygon 8             1989  9.99217e+06      1.38e-02\npolygon 9              330  1.11896e+06      1.54e-03\npolygon 10             175  9.25904e+05      1.28e-03\npolygon 11             115  9.28394e+05      1.28e-03\npolygon 12              24  6.35239e+03      8.76e-06\npolygon 13 (hole)        3 -1.06765e+00     -1.47e-09\npolygon 14             190  2.02489e+05      2.79e-04\npolygon 15              37  1.01705e+04      1.40e-05\npolygon 16              25  1.66227e+04      2.29e-05\npolygon 17              10  2.14507e+03      2.96e-06\npolygon 18              66  1.61841e+04      2.23e-05\npolygon 19            5195  6.36837e+08      8.78e-01\npolygon 20              76  3.12332e+05      4.31e-04\npolygon 21             627  3.18913e+07      4.40e-02\npolygon 22              20  3.28420e+04      4.53e-05\npolygon 23              42  5.58317e+04      7.70e-05\npolygon 24              67  1.31354e+06      1.81e-03\npolygon 25             734  4.69093e+06      6.47e-03\npolygon 26              16  3.19460e+03      4.40e-06\npolygon 27              15  4.87296e+03      6.72e-06\npolygon 28              15  4.46420e+03      6.15e-06\npolygon 29              14  5.46674e+03      7.54e-06\npolygon 30              37  5.26194e+03      7.25e-06\npolygon 31             111  6.62927e+05      9.14e-04\npolygon 32              69  5.63134e+04      7.76e-05\npolygon 33             143  1.45139e+05      2.00e-04\npolygon 34             397  2.48821e+06      3.43e-03\npolygon 35              90  1.15991e+05      1.60e-04\npolygon 36              98  6.26829e+04      8.64e-05\npolygon 37             165  3.38736e+05      4.67e-04\npolygon 38             130  9.40465e+04      1.30e-04\npolygon 39              93  4.30642e+05      5.94e-04\npolygon 40              16  2.01046e+03      2.77e-06\npolygon 41             415  3.25384e+06      4.49e-03\npolygon 42              30  1.08382e+04      1.49e-05\npolygon 43              53  3.44003e+04      4.74e-05\npolygon 44              26  8.34758e+03      1.15e-05\npolygon 45              74  5.82234e+04      8.03e-05\npolygon 46             327  2.16921e+06      2.99e-03\npolygon 47             177  4.67446e+05      6.44e-04\npolygon 48              46  6.99702e+05      9.65e-04\npolygon 49               6  1.68410e+04      2.32e-05\npolygon 50              13  7.00873e+04      9.66e-05\npolygon 51               4  9.45963e+03      1.30e-05\nenclosing rectangle: [2663.93, 56047.79] x [16357.98, 50244.03] units\n                     (53380 x 33890 units)\nWindow area = 725376000 square units\nFraction of frame area: 0.401\n\nchildcareSG_ppp.km &lt;- rescale.ppp(childcareSG_ppp, 1000, \"km\")\nsummary(childcareSG_ppp.km)\n\nPlanar point pattern:  1545 points\nAverage intensity 2.129929 points per square km\n\nCoordinates are given to 14 decimal places\n\nWindow: polygonal boundary\n51 separate polygons (2 holes)\n                  vertices         area relative.area\npolygon 1 (hole)        30 -7.08118e-03     -9.76e-06\npolygon 2               55  8.25379e-02      1.14e-04\npolygon 3               90  4.15092e-01      5.72e-04\npolygon 4               49  1.66986e-02      2.30e-05\npolygon 5               38  2.42492e-02      3.34e-05\npolygon 6              976  2.33447e+01      3.22e-02\npolygon 7              721  1.92795e+00      2.66e-03\npolygon 8             1989  9.99217e+00      1.38e-02\npolygon 9              330  1.11896e+00      1.54e-03\npolygon 10             175  9.25904e-01      1.28e-03\npolygon 11             115  9.28394e-01      1.28e-03\npolygon 12              24  6.35239e-03      8.76e-06\npolygon 13 (hole)        3 -1.06765e-06     -1.47e-09\npolygon 14             190  2.02489e-01      2.79e-04\npolygon 15              37  1.01705e-02      1.40e-05\npolygon 16              25  1.66227e-02      2.29e-05\npolygon 17              10  2.14507e-03      2.96e-06\npolygon 18              66  1.61841e-02      2.23e-05\npolygon 19            5195  6.36837e+02      8.78e-01\npolygon 20              76  3.12332e-01      4.31e-04\npolygon 21             627  3.18913e+01      4.40e-02\npolygon 22              20  3.28420e-02      4.53e-05\npolygon 23              42  5.58317e-02      7.70e-05\npolygon 24              67  1.31354e+00      1.81e-03\npolygon 25             734  4.69093e+00      6.47e-03\npolygon 26              16  3.19460e-03      4.40e-06\npolygon 27              15  4.87296e-03      6.72e-06\npolygon 28              15  4.46420e-03      6.15e-06\npolygon 29              14  5.46674e-03      7.54e-06\npolygon 30              37  5.26194e-03      7.25e-06\npolygon 31             111  6.62927e-01      9.14e-04\npolygon 32              69  5.63134e-02      7.76e-05\npolygon 33             143  1.45139e-01      2.00e-04\npolygon 34             397  2.48821e+00      3.43e-03\npolygon 35              90  1.15991e-01      1.60e-04\npolygon 36              98  6.26829e-02      8.64e-05\npolygon 37             165  3.38736e-01      4.67e-04\npolygon 38             130  9.40465e-02      1.30e-04\npolygon 39              93  4.30642e-01      5.94e-04\npolygon 40              16  2.01046e-03      2.77e-06\npolygon 41             415  3.25384e+00      4.49e-03\npolygon 42              30  1.08382e-02      1.49e-05\npolygon 43              53  3.44003e-02      4.74e-05\npolygon 44              26  8.34758e-03      1.15e-05\npolygon 45              74  5.82234e-02      8.03e-05\npolygon 46             327  2.16921e+00      2.99e-03\npolygon 47             177  4.67446e-01      6.44e-04\npolygon 48              46  6.99702e-01      9.65e-04\npolygon 49               6  1.68410e-02      2.32e-05\npolygon 50              13  7.00873e-02      9.66e-05\npolygon 51               4  9.45963e-03      1.30e-05\nenclosing rectangle: [2.66393, 56.04779] x [16.35798, 50.24403] km\n                     (53.38 x 33.89 km)\nWindow area = 725.376 square km\nUnit of length: 1 km\nFraction of frame area: 0.401\n\n\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG.bw,main = \"Kernel Density Estimation of Childcare Locations (Rescaled to KM)\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#working-with-different-automatic-bandwidth-methods",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#working-with-different-automatic-bandwidth-methods",
    "title": "Spatial Point Patterns Analysis",
    "section": "6.2 working with different automatic bandwidth methods",
    "text": "6.2 working with different automatic bandwidth methods\nBandwidth is a crucial parameter in Kernel Density Estimation (KDE). It controls the degree of smoothing applied to the data. Different methods for selecting the bandwidth lead to different levels of smoothing, which can impact the interpretation of the density estimate.\nIn the spatstat package, several functions are available to determine the optimal bandwidth for KDE:\n\nbw.diggle():\n\nPurpose: Designed for spatial point patterns, it aims to balance the trade-off between bias and variance in the density estimate.\nCharacteristics: Often produces a good balance between under- and over-smoothing, making it suitable for general spatial analysis.\n\nbw.CvL() (Cronie and Van Lieshout):\n\nPurpose: This method minimizes the integrated squared error between the true intensity function and the estimated intensity function.\nCharacteristics: It’s particularly good for minimizing error over the entire study area, but it can be sensitive to the overall distribution of points.\n\nbw.scott() (Scott’s Rule):\n\nPurpose: Based on Scott’s rule of thumb, this method provides a bandwidth that scales with the number of points and the dimension of the data.\nCharacteristics: Often results in a conservative (wider) bandwidth, leading to smoother density estimates that may miss finer details.\n\nbw.ppl() (Likelihood Cross-Validation):\n\nPurpose: This method uses cross-validation to select a bandwidth that maximizes the likelihood of the observed data under the KDE model.\nCharacteristics: It tends to focus on how well the bandwidth explains the data, often leading to a finer, more detailed density estimate.\n\n\n\nCvLScottPPLdiggle\n\n\n\nbw.CvL(childcareSG_ppp.km)\n\n sigma \n2.9203 \n\n\n\n\n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.224898 1.450966 \n\n\n\n\n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.2975198 \n\n\n\n\n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.2984095 \n\n\n\n\n\n\n# Perform Kernel Density Estimation with different bandwidth selection methods\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\nkde_childcareSG.scott &lt;- density(childcareSG_ppp.km, sigma=bw.scott, edge=TRUE, kernel=\"gaussian\")\nkde_childcareSG.CvL &lt;- density(childcareSG_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\nkde_childcareSG.diggle &lt;- density(childcareSG_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n\n\nlayout(matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE), widths = c(1, 1), heights = c(1, 1))\n# Set margins to the minimum (bottom, left, top, right)\npar(mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\n# Plot the results for comparison\npar(mfrow=c(2,2))  # Arrange plots in a 2x2 grid\nplot(kde_childcareSG.diggle, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\nplot(kde_childcareSG.CvL, main = \"bw.CvL\")\nplot(kde_childcareSG.scott, main = \"bw.scott\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#working-with-different-kernel-methods.",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#working-with-different-kernel-methods.",
    "title": "Spatial Point Patterns Analysis",
    "section": "6.3 working with different kernel methods.",
    "text": "6.3 working with different kernel methods.\n\n\n\n\n\n\n\n\nKernel Method\nShape\nCharacterisitics\n\n\n\n\nGaussian\nBell shaped- normal\nVery smooth, widely used, good for most applications, but might oversmooth and miss finer details.\n\n\nEpanechnikov\nParabolic\nEfficient, minimizes estimation error, compact support (affects nearby points), less smooth than Gaussian.\n\n\nQuartic\nBell Shape with flat top\nBalanced smoothness and efficiency, compact support, focuses on nearby points, similar to Epanechnikov.\n\n\nUniform\nRectangle\nSimple and fast, gives equal weight within a certain distance, but produces rougher estimates.\n\n\n\n\nlayout(matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE), widths = c(1, 1), heights = c(1, 1))\n\n# Set margins to the minimum (bottom, left, top, right)\npar(mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\n\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#compute-kde-using-adaptive-bandwidth",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#compute-kde-using-adaptive-bandwidth",
    "title": "Spatial Point Patterns Analysis",
    "section": "7.1 Compute KDE using adaptive bandwidth",
    "text": "7.1 Compute KDE using adaptive bandwidth\nderive adaptive kernel density estimation by using density.adaptive() of spatstat. we can adaptively display\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\nComparing it side by side\n\nsuppressMessages({\n  tmap_mode(\"plot\")  # Use \"view\" for an interactive map or \"plot\" for a static map\n})\n\npar(mfrow = c(1, 2), mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#converting-kde-output-into-grid-object",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#converting-kde-output-into-grid-object",
    "title": "Spatial Point Patterns Analysis",
    "section": "7.3 Converting KDE output into GRID Object",
    "text": "7.3 Converting KDE output into GRID Object\n\nkde_df &lt;- as.data.frame(kde_childcareSG.bw)\ncoordinates(kde_df) &lt;- ~x+y\ngridded(kde_df) &lt;- TRUE\n# Now we have a SpatialGridDataFrame\nkde_SpatialGrid &lt;- as(kde_df, \"SpatialGridDataFrame\")\nspplot(kde_SpatialGrid, main = \"Kernel Density Estimation (bw.diggle)\")\n\n\n\n\n\n\n\n\n\n7.3.1 Coverting grid output into raster\n\nkde_childcareSG_bw_raster &lt;- raster(kde_childcareSG.bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)\n\n\n\n\n7.3.2 Assigning Projection Systems\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.4170614, 0.2647348  (x, y)\nextent     : 2.663926, 56.04779, 16.35798, 50.24403  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : layer \nvalues     : -8.476185e-15, 28.51831  (min, max)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#visualizing-the-output-map",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#visualizing-the-output-map",
    "title": "Spatial Point Patterns Analysis",
    "section": "7.4 Visualizing the Output Map",
    "text": "7.4 Visualizing the Output Map\n\nsuppressMessages({\n  tmap_mode(\"plot\")  # Use \"view\" for an interactive map or \"plot\" for a static map\n})\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"layer\", palette = \"viridis\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#comparing-spatial-point-patterns-using-kde",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#comparing-spatial-point-patterns-using-kde",
    "title": "Spatial Point Patterns Analysis",
    "section": "7.5 Comparing Spatial Point Patterns Using KDE",
    "text": "7.5 Comparing Spatial Point Patterns Using KDE\nFocused on KDE childcare at ponggol, tampines, chua chu kang and jurong west these are the planning areas we would like to epxlore further\n\n7.5.1 Extracting the study area\n\npg &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n\nPunggolTampinesChoa Chu KangJurong West\n\n\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Ponggol\")\n\n\n\n\n\n\n\n\n\n\n\nplot(tm, main = \"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\nplot(ck, main.title = \"Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\n\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.5.2 Creating the owin object\n\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n\n\n\n7.5.3 Combining the childcare points and study area\n\nchildcare_pg_ppp = jittered_childcare_ppp[pg_owin]\nchildcare_tm_ppp = jittered_childcare_ppp[tm_owin]\nchildcare_ck_ppp = jittered_childcare_ppp[ck_owin]\nchildcare_jw_ppp = jittered_childcare_ppp[jw_owin]\n\nNext, rescale.ppp() function is used to trasnform the unit of measurement from metre to kilometre.\n\nchildcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n\nplot the maps\n\n# Adjust margins and layout\nlayout(matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE), widths = c(1, 1), heights = c(1, 1))\n# Set margins to the minimum (bottom, left, top, right)\npar(mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\n# Plot the point patterns\nplot(childcare_pg_ppp.km, main = \"Punggol\", cex.main = 5)\nplot(childcare_tm_ppp.km, main = \"Tampines\", cex.main = 5)\nplot(childcare_ck_ppp.km, main = \"Choa Chu Kang\", cex.main = 5)\nplot(childcare_jw_ppp.km, main = \"Jurong West\", cex.main = 5)\n\n\n\n\n\n\n\n\n\n\n7.5.4 computing the kde\n\nlayout(matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE), widths = c(1, 1), heights = c(1, 1))\n# Set margins to the minimum (bottom, left, top, right)\npar(mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tempines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\n7.5.5 Computing fixed bandwidth KDE\nFor comparison purposes, we will use 250m as the bandwidth.\n\nlayout(matrix(c(1, 2, 3, 4), 2, 2, byrow = TRUE), widths = c(1, 1), heights = c(1, 1))\n\n# Set margins to the minimum (bottom, left, top, right)\npar(mar = c(2, 2, 2, 2), oma = c(0, 0, 0, 0))\n\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#testing-spatial-point-patterns-using-clark-and-evans-test",
    "title": "Spatial Point Patterns Analysis",
    "section": "8.1 Testing spatial point patterns using Clark and Evans Test",
    "text": "8.1 Testing spatial point patterns using Clark and Evans Test\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.55631, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\n\n\nR = 0.55631: The observed mean nearest-neighbor distance is significantly smaller than the expected distance under CSR, indicating clustering.\np-value &lt; 2.2e-16: The p-value is extremely small, which strongly suggests that the null hypothesis (random distribution) should be rejected.\nConclusion: Based on these results, we reject the null hypothesis and accept the alternative hypothesis that the distribution of childcare services is clustered."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#clark-and-evans-test-choa-chu-kang-planning-area",
    "title": "Spatial Point Patterns Analysis",
    "section": "8.2 Clark and Evans Test: Choa Chu Kang planning area",
    "text": "8.2 Clark and Evans Test: Choa Chu Kang planning area\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91415, p-value = 0.1996\nalternative hypothesis: two-sided\n\n\nHypotheses for the Clark-Evans Test\nNull Hypothesis (Ho):\n\nThe distribution of childcare services in the Choa Chu Kang region (childcare_ck_ppp) is randomly distributed. This means there is no significant clustering or regular spacing in the locations of the childcare services; they follow a pattern consistent with complete spatial randomness (CSR).\n\nAlternative Hypothesis (H1):\n\nThe distribution of childcare services in the Choa Chu Kang region is not randomly distributed. This means there is a significant deviation from randomness, which could be either clustering (points are closer together than expected) or regular spacing (points are further apart than expected).\n\nTest Results\nTest Statistic (R):\n\nR = 0.91416: The ratio of the observed mean nearest-neighbor distance to the expected mean distance under CSR is close to 1. This indicates that the observed distribution of points is fairly similar to what would be expected under a random distribution, with a slight indication of clustering (since R is slightly less than 1), but not strong enough to be statistically significant.\n\np-value:\n\np-value = 0.1996: The p-value is greater than the typical alpha level of 0.05, indicating that the observed pattern could reasonably occur under the null hypothesis (random distribution). In other words, there isn’t enough evidence to reject the null hypothesis.\n\nConclusion\n\nFail to Reject the Null Hypothesis: Since the p-value is 0.1996 (which is greater than 0.05), we do not reject the null hypothesis. This means we do not have sufficient evidence to conclude that the distribution of childcare services in Choa Chu Kang is significantly different from random.\nInterpretation:\n\nR = 0.91416 suggests a slight tendency towards clustering, but this is not statistically significant.\nThe p-value of 0.1996 suggests that any apparent clustering could be due to random variation, and there is no strong evidence of a non-random (clustered or regular) distribution pattern"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#clark-and-evans-test-tampines-planning-area",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#clark-and-evans-test-tampines-planning-area",
    "title": "Spatial Point Patterns Analysis",
    "section": "8.3 Clark and Evans Test: Tampines planning area",
    "text": "8.3 Clark and Evans Test: Tampines planning area\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.77989, p-value = 7.114e-05\nalternative hypothesis: two-sided\n\n\nNull Hypothesis (Ho):\n\nThe distribution of childcare services in the Tampines region is randomly distributed. This means there is no significant clustering or regular spacing in the locations of the childcare services; they follow a pattern consistent with complete spatial randomness (CSR).\n\nAlternative Hypothesis (H1):\n\nThe distribution of childcare services in the Tampines region is not randomly distributed. This means there is a significant deviation from randomness, which could be either clustering (points are closer together than expected) or regular spacing (points are further apart than expected).\n\nInterpreting the Results\nTest Statistic (R):\n\nR = 0.77989: The ratio of the observed mean nearest-neighbor distance to the expected mean distance under CSR is less than 1. This indicates that the points are closer together than they would be under a random distribution, suggesting some level of clustering.\n\np-value:\n\np-value = 7.113e-05: The p-value is very small, significantly less than the typical alpha level of 0.05. This indicates that the probability of observing this pattern of points under the null hypothesis (random distribution) is extremely low.\n\nConclusion:\n\nSince the p-value is much smaller than 0.05, we reject the null hypothesis. The result supports the alternative hypothesis that the distribution of childcare services in the Tampines region is not randomly distributed.\n\nGiven that R &lt; 1, this deviation from randomness is specifically indicative of clustering. The childcare services are more tightly grouped together than would be expected if they were randomly distributed."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area",
    "title": "Spatial Point Patterns Analysis",
    "section": "9.1 Choa Chu Kang planning area",
    "text": "9.1 Choa Chu Kang planning area\n\n9.1.1 Computing G-function estimation\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n9.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with G-function\nenvelope(): Generates a comparison between observed and expected patterns under CSR by simulating many possible outcomes and calculating the range of these simulations.\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\n9.1.3 Analyzing the result\n\n# Calculate the p-value based on the envelope\np_value &lt;- mean(G_CK.csr$obs &lt; G_CK.csr$lo | G_CK.csr$obs &gt; G_CK.csr$hi)\n# Print the P value\nprint(paste(\"P value =\", p_value))\n\n[1] \"P value = 0.0292397660818713\"\n\n\nKey Elements in the Plot:\n\nBlack Line (G_obs(r)): Represents the observed G-function, showing the cumulative distribution of the nearest neighbor distances in your actual data.\nRed Dashed Line (G_theo(r)): Represents the theoretical G-function under CSR, showing what the distribution of nearest neighbor distances would look like if the points were randomly distributed.\nGray Envelope: Represents the range of G-function values generated from simulations under CSR, providing a visual benchmark for assessing the significance of deviations in the observed G-function.\n\nWhat the Plot Tells Us:\n\nObserved G-function Above the Theoretical G-function: In our plot, the black line (G_obs(r)) is mostly above the red dashed line (G_theo(r)), indicating that the observed points are closer together (more clustered) than what would be expected under CSR.\nObserved G-function Outside the CSR Envelope: When the black line moves outside the gray envelope (particularly above it), this suggests that the clustering is statistically significant.\n\nResults\n\nClustering: The observed G-function (G_obs(r)) being above the theoretical G-function (G_theo(r)) and often outside the CSR envelope indicates significant clustering of the childcare services in the Choa Chu Kang area.\nStatistical Significance: The p-value of 0.025 confirms that this clustering is statistically significant, meaning that the spatial distribution of childcare centers in this area is not random but rather clustered."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area",
    "title": "Spatial Point Patterns Analysis",
    "section": "9.2 Tampines planning area",
    "text": "9.2 Tampines planning area\n\n9.2.1 Computing G-function estimation\nThe \"best\" option allows spatstat to choose the most suitable edge correction method for the specific point pattern you are analyzing. This is particularly useful if you’re unsure which correction method is optimal for your data.\n\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n\n\n\n\n\n\n\n\n\n\n9.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed.\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nThe code chunk below is used to perform the hypothesis testing.\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_tm.csr)\n\n\n\n\n\n\n\n\n\n\n9.2.3 Analyzing the result\n\n# Calculate the p-value based on the envelope \np_value &lt;- mean(G_tm.csr$obs &lt; G_tm.csr$lo | G_tm.csr$obs &gt; G_tm.csr$hi) \n# Print the P value \nprint(paste(\"P value =\", p_value)) \n\n[1] \"P value = 0.0467836257309941\"\n\n\nKey Observations from the Plot:\n\nBlack Line (G_obs(r)) Above Red Dashed Line (G_theo(r)): This indicates that the observed points (childcare services in Tampines) are generally closer to each other than would be expected under CSR, suggesting clustering.\nBlack Line Partially Outside the Gray Envelope: The observed G-function steps outside the CSR envelope at some distances, suggesting that the observed clustering is statistically significant at those distances.\n\np-value:\n\np-value = 0.037: This p-value indicates that there is a 3.7% chance of observing such a distribution (or one more extreme) under the null hypothesis of random distribution. Since this p-value is below the common significance threshold of 0.05, we can conclude that the observed pattern is unlikely to be due to random chance.\n\nConclusion:\n\nReject the Null Hypothesis (Ho): Given the p-value of 0.037, we reject the null hypothesis that the distribution of childcare services in Tampines is randomly distributed.\nAccept the Alternative Hypothesis (H1): The data suggests that the distribution of childcare services in Tampines is not random. Specifically, the observed G-function shows clustering, where the childcare centers are closer to each other than would be expected under a random distribution."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-1",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-1",
    "title": "Spatial Point Patterns Analysis",
    "section": "10.1 Choa Chu Kang planning area",
    "text": "10.1 Choa Chu Kang planning area\n\n10.1.1 Computing F-function estimation\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\n\n\n\n10.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-function\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\n10.1.3 Analyzing the result\n\np_value &lt;- mean(F_CK.csr$obs &lt; F_CK.csr$lo | F_CK.csr$obs &gt; F_CK.csr$hi)\n# Print the p-value\nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0\"\n\n\nKey Observations:\n\nF_obs(r) Below the Envelope:\n\nThe observed F-function (F_obs(r)) lies entirely below the gray CSR envelope across almost all distances r. This suggests that the nearest neighbor distances from random locations to the nearest childcare center are generally larger than expected under CSR.\nIn practical terms, this means that the points (childcare centers) are more dispersed than would be expected if they were randomly distributed, indicating a tendency toward regular spacing.\n\np-value of 0:\n\nA p-value of 0 indicates that in all 999 simulations, the observed F-function fell outside the envelope. This is a strong statistical signal that the observed pattern deviates significantly from randomness.\nSince the observed F-function is consistently below the CSR envelope, it suggests that the observed pattern is significantly more dispersed (regular) than would be expected under a random distribution.\n\n\nConclusion:\n\nReject the Null Hypothesis (Ho):\n\nGiven that the p-value is 0, we reject the null hypothesis that the distribution of childcare services in Choa Chu Kang is randomly distributed.\n\nAccept the Alternative Hypothesis (H1):\n\nThe observed spatial pattern of childcare services in Choa Chu Kang is not random. The F-function analysis suggests that the pattern is significantly more dispersed than expected under CSR, indicating a regular spacing of childcare centers rather than clustering or randomness."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-1",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-1",
    "title": "Spatial Point Patterns Analysis",
    "section": "10.2 Tampines planning area",
    "text": "10.2 Tampines planning area\n\n10.2.1 Computing F-function estimation\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\n\n\n\n10.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-function\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_tm.csr)\n\n\n\n\n\n\n\n\n\n\n10.2.3 Analyzing the result\n\np_value &lt;- mean(F_tm.csr$obs &lt; F_tm.csr$lo | F_tm.csr$obs &gt; F_tm.csr$hi) \n# Print the p-value \nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0.643835616438356\"\n\n\nKey Observations:\n\nF_obs(r) Below the Theoretical Line and Envelope:\n\nThe observed F-function (F_obs(r)) is mostly below the theoretical F-function (F_theo(r)) and falls below the lower bound of the CSR envelope. This suggests that the nearest neighbor distances from random locations to the nearest childcare center are generally larger than expected under CSR, indicating a tendency towards regular spacing.\n\np-value = 0.657:\n\nThe p-value of 0.657 suggests that there is no significant deviation from the null hypothesis of randomness. A p-value this high indicates that the observed spatial distribution is consistent with what would be expected under CSR.\n\n\nConclusion:\n\nFail to Reject the Null Hypothesis (Ho):\n\nGiven the p-value of 0.657, we fail to reject the null hypothesis that the distribution of childcare services in Tampines is randomly distributed.\n\nInterpretation:\n\nThe observed F-function does not show significant deviation from the theoretical F-function under CSR. The high p-value indicates that any observed regularity or dispersion in the spatial distribution of childcare services in Tampines is likely due to random variation, rather than a systematic pattern."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-2",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-2",
    "title": "Spatial Point Patterns Analysis",
    "section": "11.1 Choa Chu Kang planning area",
    "text": "11.1 Choa Chu Kang planning area\n\n11.1.1 Computing K-function estimation\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n\n11.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with K-function\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\n11.1.3 Analyzing the result\n\np_value &lt;- mean(K_ck.csr$obs &lt; K_ck.csr$lo | K_ck.csr$obs &gt; K_ck.csr$hi) \n# Print the p-value \nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0.0331384015594542\"\n\n\nKey Observations:\n\nK_obs(r) Above the Theoretical Line:\n\nThe observed K-function (K_obs(r) - r) is slightly above the theoretical K-function (K_theo(r) - r), particularly at larger distances. This suggests that there might be some clustering in the distribution of childcare centers at larger scales, as more pairs of points are found within these distances than expected under CSR.\n\nK_obs(r) Within the CSR Envelope:\n\nThe observed K-function mostly remains within the CSR envelope, although it tends to approach the upper bound of the envelope at larger distances. This indicates that while there is some indication of clustering, the deviation is not statistically significant across all distances.\n\n\np-value = 0.113:\n\np-value of 0.113:\n\nThe p-value of 0.113 indicates that there is an 11.3% chance of observing such a distribution (or one more extreme) under the null hypothesis of random distribution. This p-value is above the common significance threshold of 0.05, meaning that we do not have strong enough evidence to reject the null hypothesis.\n\n\nConclusion:\n\nFail to Reject the Null Hypothesis (Ho):\n\nGiven the p-value of 0.113, we fail to reject the null hypothesis that the distribution of childcare services in Choa Chu Kang is randomly distributed.\n\nInterpretation:\n\nWhile the K-function suggests some mild clustering, especially at larger distances, the observed pattern does not deviate significantly from what would be expected under CSR. The p-value supports this conclusion, indicating that any clustering observed is not statistically significant at the 5% level."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-2",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-2",
    "title": "Spatial Point Patterns Analysis",
    "section": "11.2 Tampines planning area",
    "text": "11.2 Tampines planning area\n\n11.2.1 Computing K-function estimation\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n\n11.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-function\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n11.2.3 Analyzing the result\n\np_value &lt;- mean(K_tm.csr$obs &lt; K_tm.csr$lo | K_tm.csr$obs &gt; K_tm.csr$hi) \n# Print the p-value \nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0.988304093567251\"\n\n\nKey Observations:\n\nK_obs(r) Significantly Above the Theoretical Line and Envelope:\n\nThe observed K-function (K_obs(r) - r) is consistently above the theoretical K-function (K_theo(r) - r) and lies well above the upper bound of the CSR envelope, especially as distance rrr increases. This strong deviation indicates a significant clustering of points at varying distances, particularly at larger scales.\n\np-value of 0.998:\n\nThe extremely high p-value of 0.998 suggests that the observed pattern is consistent with the null hypothesis of CSR. However, given the context and the K-function being well above the envelope, this might seem counte rintuitive. This high p-value typically indicates that the observed pattern is not significantly different from CSR, but the visual evidence in the plot suggests otherwise.\n\n\nConclusion:\n\nFail to Reject the Null Hypothesis (Ho):\n\nGiven the p-value of 0.998, we would typically fail to reject the null hypothesis that the distribution of childcare services in Tampines is randomly distributed.\n\nInterpretation:\n\nDespite the high p-value, the plot clearly shows that the observed K-function is consistently and significantly above the CSR envelope, indicating clustering. This discrepancy between the p-value and visual interpretation could result from a peculiarity in the data or the way the p-value was calculated. It’s essential to consider both statistical results and visual evidence when drawing conclusions."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-3",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#choa-chu-kang-planning-area-3",
    "title": "Spatial Point Patterns Analysis",
    "section": "12.1 Choa Chu Kang planning area",
    "text": "12.1 Choa Chu Kang planning area\n\n12.1.1 Computing L-function estimation\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\n\n\n\n12.1.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Choa Chu Kang are randomly distributed.\nH1= The distribution of childcare services at Choa Chu Kang are not randomly distributed.\n\nThe null hypothesis will be rejected if p-value is smaller than alpha value of 0.001.\nMonte Carlo test with L-function\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\n11.1.3 Analyzing the result\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.91415, p-value = 0.1996\nalternative hypothesis: two-sided\n\np_value &lt;- mean(L_ck.csr$obs &lt; L_ck.csr$lo | L_ck.csr$obs &gt; L_ck.csr$hi)  \n# Print the p-value  \nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0.140350877192982\"\n\n\nKey Observations:\n\nL_obs(r) Fluctuations:\n\nThe observed L-function (L_obs(r) - r) fluctuates around the theoretical line (L_theo(r) - r = 0) and within the CSR envelope for most of the distance range.\nIn the early part of the plot (small distances), the observed L-function dips below the envelope briefly, indicating some regularity or dispersion at very small scales.\n\nMostly Within the CSR Envelope:\n\nFor the majority of distances rrr, the observed L-function stays within the CSR envelope, suggesting that the observed pattern does not significantly deviate from randomness at these scales.\n\np-value of 0.051:\n\nThe p-value of 0.051 is very close to the common significance threshold of 0.05. This p-value indicates that there is a 5.1% chance of observing such a distribution (or one more extreme) under the null hypothesis of random distribution.\nAlthough the p-value is slightly above the threshold, it suggests a marginal significance, meaning that the observed pattern might be slightly more regular or dispersed than what would be expected under CSR.\n\n\nConclusion:\n\nMarginal Result:\n\nGiven the p-value of 0.051, we fail to reject the null hypothesis at the 5% significance level, but it’s very close. This suggests that the evidence is not strong enough to confidently assert that the distribution is non-random.\nHowever, the proximity of the p-value to 0.05 indicates that the observed pattern is on the verge of being considered significantly different from CSR, possibly indicating some degree of regularity or dispersion, especially at smaller scales."
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-3",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html#tampines-planning-area-3",
    "title": "Spatial Point Patterns Analysis",
    "section": "12.2 Tampines planning area",
    "text": "12.2 Tampines planning area\n\n12.2.1 Computing F-function estimation\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\n\n\n\n12.2.2 Performing Complete Spatial Randomness Test\nTo confirm the observed spatial patterns above, a hypothesis test will be conducted. The hypothesis and test are as follows:\n\nHo = The distribution of childcare services at Tampines are randomly distributed.\nH1= The distribution of childcare services at Tampines are not randomly distributed\n\nThe null hypothesis will be rejected is p-value is smaller than alpha value of 0.001.\nMonte Carlo test with F-function\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n12.2.3 Analyzing the result\n\np_value &lt;- mean(L_tm.csr$obs &lt; L_tm.csr$lo | L_tm.csr$obs &gt; L_tm.csr$hi)  \n# Print the p-value  \nprint(paste(\"P-value =\", p_value))\n\n[1] \"P-value = 0.994152046783626\"\n\n\nKey Observations:\n\nL_obs(r) Above the Theoretical Line:\n\nThe observed L-function (L_obs(r) - r) is consistently above the theoretical line (L_theo(r) - r = 0) and outside the CSR envelope across almost all distances rrr. This suggests significant clustering of childcare centers at these scales.\n\np-value of 0.996:\n\nThe extremely high p-value of 0.996 indicates that the observed L-function does not significantly deviate from what would be expected under CSR, according to the simulations.\nGiven alpha level of 0.001, the p-value is much higher than this threshold, meaning that there is no strong evidence to reject the null hypothesis in favor of the alternative.\n\n\nConclusion:\n\nFail to Reject the Null Hypothesis (Ho):\n\nGiven that the p-value of 0.996 is well above the alpha threshold of 0.001, we fail to reject the null hypothesis. This suggests that the observed distribution of childcare services in Tampines does not significantly deviate from a random distribution, according to the statistical test."
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_1/data/geospatial/MPSZ-2019.html",
    "href": "In_Class_Exercises/In_Class_Exercise_1/data/geospatial/MPSZ-2019.html",
    "title": "IS415-GAA: JialeSo",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_1/In_Class_Exercise1.html",
    "href": "In_Class_Exercises/In_Class_Exercise_1/In_Class_Exercise1.html",
    "title": "In Class Exercise1: Geospatial Data Science",
    "section": "",
    "text": "There’s no In Class Exercise 1, so here’s a picture of a cat."
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_2/downloaded Files/MPSZ-2019/MPSZ-2019.html",
    "href": "In_Class_Exercises/In_Class_Exercise_2/downloaded Files/MPSZ-2019/MPSZ-2019.html",
    "title": "IS415-GAA: JialeSo",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Take_Home_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html",
    "href": "Take_Home_Exercises/Hands_On_Exercise_1/Hands_On_Exercise1.html",
    "title": "Hands-On Exercise 1:",
    "section": "",
    "text": "Getting Started\nInstall and launching R Packages\nThe code chunk below uses the p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n  library(pacman)\n\nWarning: package 'pacman' was built under R version 4.3.3\n\n  pacman::p_load(tidyverse)\n\nImporting the data"
  },
  {
    "objectID": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html",
    "href": "Hands_On_Exercises/Hands_On_Exercise_3/Hands_On_Exercise3.html",
    "title": "Spatial Point Patterns Analysis",
    "section": "",
    "text": "Spatial Point Pattern Analysis involves evaluating the pattern or distribution of a set of points on a surface. These points can represent the locations of:\n\nEvents, such as crimes, traffic accidents, or disease outbreaks, or\nBusiness services, like coffee shops and fast food outlets, or facilities such as childcare and eldercare centers.\n\nThe specific questions we would like to answer are as follows:\n\nare the childcare centres in Singapore randomly distributed throughout the country?\nif the answer is not, then the next logical question is where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#import-and-simple-data-transformation",
    "href": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#import-and-simple-data-transformation",
    "title": "In Class Exercise 3: Spatial Point Patterns Analysis",
    "section": "4.1 Import and Simple Data Transformation",
    "text": "4.1 Import and Simple Data Transformation"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#simply-join-the-data-and-then-map-it-out",
    "href": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#simply-join-the-data-and-then-map-it-out",
    "title": "In Class Exercise 3: Spatial Point Patterns Analysis",
    "section": "4.2 Simply join the data and then map it out",
    "text": "4.2 Simply join the data and then map it out\n\n4.2.1 Join the data\n\n\n4.2.2 Plot the map"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html",
    "href": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html",
    "title": "In Class Exercise 3: Spatial Point Patterns Analysis",
    "section": "",
    "text": "# eval: FALSE"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#sf-costal",
    "href": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#sf-costal",
    "title": "In Class Exercise 3: Spatial Point Patterns Analysis",
    "section": "4.1 SF Costal",
    "text": "4.1 SF Costal\nWorking with st_union()\n\nWe want to have a coastal outline of Singapore, and we can do so with st_union() to union the outline data with the subzone data.\n\n\nsg_sf &lt;- mpsz_sf %&gt;%\n  st_union()\n\nplot(sg_sf)"
  },
  {
    "objectID": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#importing-acled-myanmar-file",
    "href": "In_Class_Exercises/In_Class_Exercise_3/In_Class_Exercise3.html#importing-acled-myanmar-file",
    "title": "In Class Exercise 3: Spatial Point Patterns Analysis",
    "section": "4.2 Importing ACLED Myanmar File",
    "text": "4.2 Importing ACLED Myanmar File\n\nacled_sf &lt;- read_csv(\"data/ACLED_Myanmar.csv\") %&gt;%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"),\n  crs=4326) %&gt;%\n  st_transform(crs = 32647) %&gt;%\n  mutate(event_date = dmy(event_date))\n\n\nglimpse(acled_sf)\n\nRows: 55,574\nColumns: 30\n$ event_id_cnty      &lt;chr&gt; \"MMR56099\", \"MMR56222\", \"MMR56370\", \"MMR56376\", \"MM…\n$ event_date         &lt;date&gt; 2023-12-31, 2023-12-31, 2023-12-31, 2023-12-31, 20…\n$ year               &lt;dbl&gt; 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 202…\n$ time_precision     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ disorder_type      &lt;chr&gt; \"Political violence\", \"Political violence\", \"Politi…\n$ event_type         &lt;chr&gt; \"Explosions/Remote violence\", \"Explosions/Remote vi…\n$ sub_event_type     &lt;chr&gt; \"Shelling/artillery/missile attack\", \"Shelling/arti…\n$ actor1             &lt;chr&gt; \"Military Forces of Myanmar (2021-)\", \"Military For…\n$ assoc_actor_1      &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"Daw Na Column; YGF: Ye Gue…\n$ inter1             &lt;dbl&gt; 1, 1, 3, 6, 1, 1, 3, 1, 2, 1, 1, 2, 2, 1, 1, 3, 3, …\n$ actor2             &lt;chr&gt; NA, \"Civilians (Myanmar)\", \"Military Forces of Myan…\n$ assoc_actor_2      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ inter2             &lt;dbl&gt; 0, 7, 1, 0, 7, 0, 1, 0, 1, 7, 7, 1, 1, 0, 0, 1, 1, …\n$ interaction        &lt;dbl&gt; 10, 17, 13, 60, 17, 10, 13, 10, 12, 17, 17, 12, 12,…\n$ civilian_targeting &lt;chr&gt; NA, \"Civilian targeting\", NA, NA, NA, NA, NA, NA, N…\n$ iso                &lt;dbl&gt; 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 1…\n$ region             &lt;chr&gt; \"Southeast Asia\", \"Southeast Asia\", \"Southeast Asia…\n$ country            &lt;chr&gt; \"Myanmar\", \"Myanmar\", \"Myanmar\", \"Myanmar\", \"Myanma…\n$ admin1             &lt;chr&gt; \"Mon\", \"Rakhine\", \"Bago-West\", \"Sagaing\", \"Bago-Wes…\n$ admin2             &lt;chr&gt; \"Mawlamyine\", \"Maungdaw\", \"Thayarwady\", \"Yinmarbin\"…\n$ admin3             &lt;chr&gt; \"Ye\", \"Maungdaw\", \"Nattalin\", \"Salingyi\", \"Nattalin…\n$ location           &lt;chr&gt; \"Aing Shey\", \"Kaing Gyi (NaTaLa)\", \"Kyauk Pyoke\", \"…\n$ geo_precision      &lt;dbl&gt; 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, …\n$ source             &lt;chr&gt; \"Democratic Voice of Burma\", \"Development Media Gro…\n$ source_scale       &lt;chr&gt; \"National\", \"Subnational\", \"National\", \"National\", …\n$ notes              &lt;chr&gt; \"On 31 December 2023, in Aing Shey village (Ye town…\n$ fatalities         &lt;dbl&gt; 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, …\n$ tags               &lt;chr&gt; NA, NA, NA, \"crowd size=no report\", NA, NA, NA, NA,…\n$ timestamp          &lt;dbl&gt; 1704831212, 1704831213, 1704831214, 1704831214, 170…\n$ geometry           &lt;POINT [m]&gt; POINT (393190.2 1690159), POINT (-183852.6 23…\n\nclass(acled_sf)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\ntmap_mode('plot')\n\nacled_sf %&gt;%\n  filter(year == 2023 | event_type == 'Political violence') %&gt;%\n  tm_shape() +\n  tm_dots()\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  }
]