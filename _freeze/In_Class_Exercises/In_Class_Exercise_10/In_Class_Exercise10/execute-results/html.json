{
  "hash": "2d02058e4ecc8918f04acb1f6405b6a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 10: Geospatial Data Science\" \nauthor: \"Jiale SO\" \ndate: \"October 21, 2024\" \ndate-modified: \"last-modified\" \nexecute:    \n  eval: true   \n  echo: true   \n  freeze: true \n---\n\n\nIn Class 10:\n\n# 1 Carrying on From Hands on 9 from onward.\n\nRefer to this doc\\\n<https://r4gdsa.netlify.app/chap12.html#spatially-constrained-clustering-skater-approach>\n\n## 1.1 Loading Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, tmap, sf, ClustGeo,ggpubr, cluster, factoextra, NbClust, heatmaply, corrplot, psych, tidyverse, GGally)\n```\n:::\n\n\n## **1.2 Read File from Hands on 9**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf <- read_rds(\"data/rds/shan_sf.rds\")\nshan_ict <- read_rds(\"data/rds/shan_ict.rds\") \nshan_sf_cluster <- read_rds(\"data/rds/shan_sf_cluster.rds\")\nproxmat <- read_rds(\"data/rds/proxmat.rds\")\n```\n:::\n\n\n# 2 Conventional Hierarchical Clustering\n\n::: panel-tabset\n## Hierachcal Clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat <- dist(shan_ict, method = 'euclidean')\nhclust_ward <- hclust(proxmat, method = 'ward.D')\ngroups <- as.factor(cutree(hclust_ward, k =6 ))\n```\n:::\n\n\n## Append to Geospatial Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>%   rename(\"CLUSTER\" = \"as.matrix.groups.\") %>%   select(-c(3:4, 7:9)) %>%   rename(TS = TS.x)\n```\n:::\n\n\n## The Dendrogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex = 0.6) \nrect.hclust(hclust_ward, k = 6, border = 2:5)\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## ClusterMap\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n\n# 3 Skater\n\n## 3.1 Computing Spatial Distance Matrix\n\n### Step 1: Computing Nearest Neighbours\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sf)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\n\n### Step 2: Visualizing the neighbours\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border=grey(0.5))\npts <- st_coordinates(st_centroid(shan_sf))\nplot(shan.nb,\n      pts,\n      col = 'blue',\n      add = TRUE\n      ) \n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Step 3: Computing Minimum Spanning Tree\n\n::: panel-tabset\n## Calculating Edge Costs\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n\n## Incorporating These costs into a weights object\n\nStyle have to have B,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb,\n                   lcosts,\n                   style = \"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n\n## Computing MST\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <- mstree(shan.w)\n```\n:::\n\n\n## VIsualising MST\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry((shan_sf), baorder=gray(0.5)))\nplot.mst(shan.mst, pts,\n         col=\"blue\",\n         cex.lab = 0.7, \n         cex.circles = 0.005,\n         add= TRUE)\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n:::\n\n### Computing Spatially Constraint Clusters using SKATER Method\n\n::: panel-tabset\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskater.clust6 <- skater(edges = shan.mst[,1:2],\n                        data = shan_ict,\n                        method = \"euclidean\",\n                        ncuts = 5\n                        )\n```\n:::\n\n\n## Skater Tree\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## The Code to plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border = gray(0.5))\n\n# Plot the skater clusters with better parameter alignment\nplot(skater.clust6,\n     coords = pts,                  # Specify coordinates\n     cex.lab = 1,                   # Adjust label size for clarity\n     groups.colors = c(\"red\", \"green\", \"blue\", \"brown\", \"pink\"),\n     cex.circles = 0.005,             # Adjust the circle size\n     add = TRUE)                    # Overlay on the previous plot\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n:::\n\n## Computing Spatially Constrained Clusters using SKATER method\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename('skater_CLUSTER' = 'as.factor.groups_mat.')\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>%\n  rename('skater_CLUSTER' = 'as.factor.groups_mat.')\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n:::\n\n# 4.0 Spatially Constrained Clustering : ClustGeo Method\n\n## 4.1 Computing Spatial Distance Matrix\n\n::: panel-tabset\n## Computing Spatial Distance Matrix\n\nST_distance() of sf package is used to compute the distance matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n\n## The Cluster Graphs\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n:::\n\n\n## The Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(proxmat, distmat,\n                  range.alpha = seq(0, 1, 0.1),\n                  K=6, graph = TRUE\n                  )\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n:::\n\n\n## Saving ClustGeoOutput\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclust6 <- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups <- as.factor(cutree(clust6, k=6))\nshan_sf_clustGeo <- cbind( shan_sf, \n                            as.matrix(groups)) %>%\n  rename(\"clustGEO\" = \"as.matrix.groups.\" )\n```\n:::\n\n:::\n\n## 4.2 Visualizing the map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_clustGeo, \"clustGEO\")\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n# **5.0 Characterizing the clusters**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = shan_sf_clustGeo,\n           columns =  c(17:21),\n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE,\n           title = \"Multiple parallel coordinates plots of ICT varaibles by Cluster\") + \n  facet_grid(~ clustGEO) +\n  theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise10_files/figure-html/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "In_Class_Exercise10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}