{
  "hash": "66b6fd4eaaefef912bf03daf48bdeb8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 3: Spatial Point Patterns Analysis\"\nauthor: \"Jiale SO\"\ndate: \"September 02, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true  \n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# 1.0 Introduction\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# eval: FALSE\n```\n:::\n\n\n# 2.0 Setup and Requirements \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, tmap, tidyverse, rvest, geojsonsf)\n```\n:::\n\n\n# 3.0 Importing the Data Sets.\n\n::: panel-tabset\n### Childcare data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%   st_transform(crs = 3414) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_3\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n### Costal Outline\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CostalOutline' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n### mp14_subzone\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_3\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n:::\n\n# 4.0 GeoSpatial Data-wrangling \n\n## 4.1 SF Costal\n\nWorking with `st_union()`\n\n1.  We want to have a coastal outline of Singapore, and we can do so with `st_union()` to union the outline data with the subzone data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- mpsz_sf %>%\n  st_union()\n\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## 4.2 Importing ACLED Myanmar File\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- read_csv(\"data/ACLED_Myanmar.csv\") %>%\n  st_as_sf(coords = c(\"longitude\",\"latitude\"),\n  crs=4326) %>%\n  st_transform(crs = 32647) %>%\n  mutate(event_date = dmy(event_date))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(acled_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 55,574\nColumns: 30\n$ event_id_cnty      <chr> \"MMR56099\", \"MMR56222\", \"MMR56370\", \"MMR56376\", \"MM…\n$ event_date         <date> 2023-12-31, 2023-12-31, 2023-12-31, 2023-12-31, 20…\n$ year               <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 202…\n$ time_precision     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ disorder_type      <chr> \"Political violence\", \"Political violence\", \"Politi…\n$ event_type         <chr> \"Explosions/Remote violence\", \"Explosions/Remote vi…\n$ sub_event_type     <chr> \"Shelling/artillery/missile attack\", \"Shelling/arti…\n$ actor1             <chr> \"Military Forces of Myanmar (2021-)\", \"Military For…\n$ assoc_actor_1      <chr> NA, NA, NA, NA, NA, NA, \"Daw Na Column; YGF: Ye Gue…\n$ inter1             <dbl> 1, 1, 3, 6, 1, 1, 3, 1, 2, 1, 1, 2, 2, 1, 1, 3, 3, …\n$ actor2             <chr> NA, \"Civilians (Myanmar)\", \"Military Forces of Myan…\n$ assoc_actor_2      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ inter2             <dbl> 0, 7, 1, 0, 7, 0, 1, 0, 1, 7, 7, 1, 1, 0, 0, 1, 1, …\n$ interaction        <dbl> 10, 17, 13, 60, 17, 10, 13, 10, 12, 17, 17, 12, 12,…\n$ civilian_targeting <chr> NA, \"Civilian targeting\", NA, NA, NA, NA, NA, NA, N…\n$ iso                <dbl> 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 1…\n$ region             <chr> \"Southeast Asia\", \"Southeast Asia\", \"Southeast Asia…\n$ country            <chr> \"Myanmar\", \"Myanmar\", \"Myanmar\", \"Myanmar\", \"Myanma…\n$ admin1             <chr> \"Mon\", \"Rakhine\", \"Bago-West\", \"Sagaing\", \"Bago-Wes…\n$ admin2             <chr> \"Mawlamyine\", \"Maungdaw\", \"Thayarwady\", \"Yinmarbin\"…\n$ admin3             <chr> \"Ye\", \"Maungdaw\", \"Nattalin\", \"Salingyi\", \"Nattalin…\n$ location           <chr> \"Aing Shey\", \"Kaing Gyi (NaTaLa)\", \"Kyauk Pyoke\", \"…\n$ geo_precision      <dbl> 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, …\n$ source             <chr> \"Democratic Voice of Burma\", \"Development Media Gro…\n$ source_scale       <chr> \"National\", \"Subnational\", \"National\", \"National\", …\n$ notes              <chr> \"On 31 December 2023, in Aing Shey village (Ye town…\n$ fatalities         <dbl> 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, …\n$ tags               <chr> NA, NA, NA, \"crowd size=no report\", NA, NA, NA, NA,…\n$ timestamp          <dbl> 1704831212, 1704831213, 1704831214, 1704831214, 170…\n$ geometry           <POINT [m]> POINT (393190.2 1690159), POINT (-183852.6 23…\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(acled_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n",
    "supporting": [
      "In_Class_Exercise3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}