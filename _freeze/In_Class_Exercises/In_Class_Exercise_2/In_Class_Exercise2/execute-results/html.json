{
  "hash": "cfa8d8ca3063618a693dfcc437242df7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 2: Working with Master Plan Planning Sub-zone Data\"\nauthor: \"Jiale SO\"\ndate: \"August 26, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true  \n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\n# 1.0 Introduction\n\n# 2.0 Setup and Requirements\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse, dplyr)\n```\n:::\n\n\n# 3.0 Importing the Data Sets.\n\n## 3.1 Importing 2014 SHPZ File\n\n::: panel-tabset\n### Task at Hand\n\n1.  Go to data.gov.sg and download the 2014 Master Subzone SHP and KML File\n2.  Import and read the SHP and KML File in R.\n\n### SHPZ File Importing\n\nWe can use the `st_read` function to import the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n### KML File Importing\n\nSimilarly we can use the `st_read` function to import the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmspz_kml <- st_read(\"data/geospatial/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError: Cannot open \"C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MasterPlan2014SubzoneBoundaryWebKML.kml\"; The source could be corrupt or not supported. See `st_drivers()` for a list of supported formats.\n```\n\n\n:::\n:::\n\n\nHowever, the data on data.gov.sg is corrupted. Hence we will do a workaround, where we can create a new kml file base on the shp file and read it.\n\nStep 1: using the `st_write` to create a kml file from the shapefile\n\nStep 2: using the `st_read` function to read the generated kml file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz, \"data/geospatial/MP14_SUBZONE_WEB_PL.kml\", driver = \"KML\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLayer MP14_SUBZONE_WEB_PL in dataset data/geospatial/MP14_SUBZONE_WEB_PL.kml already exists:\nuse either append=TRUE to append to layer or append=FALSE to overwrite layer\n```\n\n\n:::\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(expr, envir, enclos): Dataset already exists.\n```\n\n\n:::\n\n```{.r .cell-code}\nmpsz_kml <- st_read(\"data/geospatial/MP14_SUBZONE_WEB_PL.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MP14_SUBZONE_WEB_PL.kml' \n  using driver `KML'\nSimple feature collection with 323 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n## 3.2 Importing 2019 SHPZ File\n\n::: panel-tabset\n## Task At Hand\n\n1.  Go to data.gov.sg and download the 2019 KML File\n2.  Import and read the KML File in R.\n\n## Importing the SHP File\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Importing KML File\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml <- st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n## 3.3 Comparison the difference between SHP and KML File and formatting the CRS.\n\n### 3.3.1 Understanding SHP and KML Files\n\nUse `glimpse()` and `head()` to compare the attributes available in each file. For instance, SHP files might have more detailed attribute tables with multiple fields, while KML files are more streamlined with fewer attributes.\n\n::: panel-tabset\n## SHP File\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpsz19_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 332\nColumns: 7\n$ SUBZONE_N  <chr> \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  <chr> \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N <chr> \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C <chr> \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   <chr> \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((103.8802 1...., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mpsz19_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6537 ymin: 1.216215 xmax: 103.8988 ymax: 1.297462\nGeodetic CRS:  WGS 84\n                SUBZONE_N SUBZONE_C      PLN_AREA_N PLN_AREA_C       REGION_N\n1             MARINA EAST    MESZ01     MARINA EAST         ME CENTRAL REGION\n2        INSTITUTION HILL    RVSZ05    RIVER VALLEY         RV CENTRAL REGION\n3          ROBERTSON QUAY    SRSZ01 SINGAPORE RIVER         SR CENTRAL REGION\n4 JURONG ISLAND AND BUKOM    WISZ01 WESTERN ISLANDS         WI    WEST REGION\n5            FORT CANNING    MUSZ02          MUSEUM         MU CENTRAL REGION\n6        MARINA EAST (MP)    MPSZ05   MARINE PARADE         MP CENTRAL REGION\n  REGION_C                       geometry\n1       CR MULTIPOLYGON (((103.8802 1....\n2       CR MULTIPOLYGON (((103.8376 1....\n3       CR MULTIPOLYGON (((103.8341 1....\n4       WR MULTIPOLYGON (((103.7125 1....\n5       CR MULTIPOLYGON (((103.8472 1....\n6       CR MULTIPOLYGON (((103.8987 1....\n```\n\n\n:::\n:::\n\n\n## KML FILE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mpsz19_kml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 332\nColumns: 3\n$ Name        <chr> \"kml_1\", \"kml_2\", \"kml_3\", \"kml_4\", \"kml_5\", \"kml_6\", \"kml…\n$ Description <chr> \"<center><table><tr><th colspan='2' align='center'><em>Att…\n$ geometry    <MULTIPOLYGON [°]> MULTIPOLYGON Z (((103.8145 ..., MULTIPOLYGON …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(mpsz19_kml)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XYZ\nBounding box:  xmin: 103.8013 ymin: 1.274155 xmax: 103.8532 ymax: 1.286517\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n4 kml_4\n5 kml_5\n6 kml_6\nescription\n1     <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>12</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>DEPOT ROAD</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>BMSZ12</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>N</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>BM</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>C22DED671DE2A940</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n2     <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>2</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>BMSZ02</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>N</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>BUKIT MERAH</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>BM</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>085EF219A5A1AEAD</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n3            <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>3</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>CHINATOWN</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>OTSZ03</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>OUTRAM</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>OT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>EF2B9A91AF49E025</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n4       <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>4</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>PHILLIP</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>DTSZ04</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>DOWNTOWN CORE</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>DT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>615D4EDDEF809F8E</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n5 <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>5</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>RAFFLES PLACE</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>DTSZ05</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>DOWNTOWN CORE</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>DT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>72107B11807074F4</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n6         <center><table><tr><th colspan='2' align='center'><em>Attributes</em></th></tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_NO</th> <td>4</td> </tr><tr bgcolor=\"\"> <th>SUBZONE_N</th> <td>CHINA SQUARE</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>SUBZONE_C</th> <td>OTSZ04</td> </tr><tr bgcolor=\"\"> <th>CA_IND</th> <td>Y</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>PLN_AREA_N</th> <td>OUTRAM</td> </tr><tr bgcolor=\"\"> <th>PLN_AREA_C</th> <td>OT</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>REGION_N</th> <td>CENTRAL REGION</td> </tr><tr bgcolor=\"\"> <th>REGION_C</th> <td>CR</td> </tr><tr bgcolor=\"#E3E3F3\"> <th>INC_CRC</th> <td>B609DF5587626C8F</td> </tr><tr bgcolor=\"\"> <th>FMEL_UPD_D</th> <td>20191223152313</td> </tr></table></center>\n                        geometry\n1 MULTIPOLYGON Z (((103.8145 ...\n2 MULTIPOLYGON Z (((103.8221 ...\n3 MULTIPOLYGON Z (((103.8438 ...\n4 MULTIPOLYGON Z (((103.8496 ...\n5 MULTIPOLYGON Z (((103.8525 ...\n6 MULTIPOLYGON Z (((103.8486 ...\n```\n\n\n:::\n:::\n\n:::\n\n### SHP vs. KML: Key Differences\n\n### Summary Table:\n\n| Property            | SHP (Shapefile)                              | KML (Keyhole Markup Language)     |\n|-----------------|-------------------------------|------------------------|\n| **File Structure**  | Multiple files for geometries and attributes | Single file for visualization     |\n| **Attributes**      | Detailed, diverse data types                 | Limited, mostly descriptive       |\n| **Geometry Types**  | Complex, suited for GIS analysis             | Basic, suited for display         |\n| **CRS Information** | Explicit and configurable (e.g., EPSG:3414)  | Typically defaults to WGS84       |\n| **Usage Context**   | GIS analysis, mapping                        | Web-based visualization           |\n| **Performance**     | Slower with large datasets                   | Lightweight and quick for display |\n\n### 3.3.2 CRS (Coordinate Reference System)\n\n-   **SHP File CRS:** Shapefiles often come with a defined CRS. In this case, we ensure that it is aligned with Singapore’s local system (EPSG:3414).\n\n-   **KML File CRS:** KML files typically default to WGS84 (EPSG:4326), which is used in web applications and is latitude/longitude-based.\n\n::: {.callout-tip appearance=\"simple\"}\nHow to know which CRS to use ? We can simply go to epsg.io to check <https://epsg.io/?q=singapore>\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz19_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp_crs3414 <- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\jiale\\Desktop\\IS415\\IS415-GAA\\In_Class_Exercises\\In_Class_Exercise_2\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(mpsz19_shp_crs3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\n# 4.0 Working with Population Data\n\n## 4.1 Import and Simple Data Transformation\n\n::: panel-tabset\n## The Task\n\nGo to[SingStat Website](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data) and download 2023's dataset for our popuplation data. We then group them by age and subzone\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/respopagesextod2023.csv\")\npopdata2023 <- popdata %>%\n  group_by(PA, SZ, AG) %>%  # Ensure data is grouped by 'AG' if needed\n  summarise(POP = sum(Pop, na.rm = TRUE)) %>%  # Summarise population\n  pivot_wider(names_from = AG, values_from = POP) %>%  # Pivot to wider format\n  ungroup()  # Ungroup the data\n\n# Check the column names\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n:::\n\n## 4.2 Simply join the data and then map it out\n\n### 4.2.1 Join the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n\n#Step 5: Merge the spatial data with the population data\nmpsz_pop2020 <- left_join(mpsz19_shp_crs3414, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n```\n:::\n\n\n### 4.2.2 Plot the map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"0_to_4\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"0_to_4\") +\n  tm_layout(main.title = \"Distribution of 0_to_4 by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](In_Class_Exercise2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In_Class_Exercise2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}